{"version":3,"sources":["reducers/errors.js","reducers/messages.js","utility.js","reducers/auth.js","actions/actionTypes.js","reducers/schools.js","reducers/users.js","reducers/index.js","store.js","actions/messages.js","actions/users.js","hoc/hoc.js","components/layout/Header.js","components/layout/Footer.js","components/layout/Sidebar.js","actions/auth.js","components/Home.js","components/layout/Alerts.js","components/accounts/Login.js","components/common/PrivateRoute.js","components/dashboard/AdminDashboard.js","components/layout/Social.js","components/dashboard/TeacherDashboard.js","components/dashboard/StudentDashboard.js","components/dashboard/Dashboard.js","actions/schools.js","components/dashboard/forms/TeachersForm.js","components/dashboard/TeacherRegister.js","components/dashboard/forms/TeacherImageUpload.js","components/dashboard/TeacherUpdate.js","components/dashboard/TeacherList.js","components/dashboard/TeacherDetails.js","components/dashboard/StudentRegister.js","components/dashboard/StudentList.js","components/dashboard/StudentDetails.js","components/dashboard/forms/StudentImageUpload.js","components/dashboard/StudentUpdate.js","components/dashboard/SchoolCreate.js","components/dashboard/forms/ImageUpload.js","components/dashboard/forms/SchoolImageUpload.js","components/dashboard/SchoolUpdate.js","components/dashboard/SchoolList.js","components/dashboard/SchoolDetails.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["initialState","msg","status","updateObject","oldObject","updatedProperties","token","first_name","last_name","username","schoolId","is_student","is_teacher","is_school_admin","is_system_admin","userId","error","loading","authStart","state","action","authSuccess","user","authFail","authLogout","reducer","type","schools","currentSchool","getSchoolListStart","getSchoolListSuccess","getSchoolListFail","deleteSchoolStart","deleteSchoolSuccess","school","deleteSchoolFail","updateSchoolStart","updateSchoolSuccess","updateSchoolFail","getSchoolDetailStart","getSchoolDetailSuccess","getSchoolDetailFail","createSchoolStart","createSchoolSuccess","createSchoolFail","users","currentUser","getUserListStart","getUserListSuccess","getUserListFail","deleteUserStart","deleteUserSuccess","deleteUserFail","updateUserStart","updateUserSuccess","updateUserFail","getUserDetailStart","getUserDetailSuccess","getUserDetailFail","combineReducers","errors","payload","messages","auth","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","returnErrors","getUsers","dispatch","axios","defaults","headers","Authorization","get","then","res","data","catch","err","deleteUser","id","delete","updateUser","put","response","getUserDetail","Hoc","props","children","Header","undefined","this","newProps","userType","isAuthenticated","logout","profileLink","authLinks","className","to","src","alt","data-toggle","data-target","aria-expanded","aria-hidden","placeholder","href","role","onClick","Component","connect","actions","Footer","Sidebar","Menu","SubMenu","rootSubmenuKeys","admin_links","schooladmin_links","teacher_links","student_links","openKeys","collapsed","toggleCollapsed","setState","onOpenChange","latestOpenKey","find","key","indexOf","dashboard","icon","dropdownTitleLink","dropdownTitle","dropdowns","teachers","link","linkTitle","students","push","sidebar_links","admin","map","val","length","v","k","schooladmin","teacher","student","sidebar","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","authRegister","email","password1","password2","post","authCheckState","JSON","parse","getItem","expirationDate","Date","getTime","Home","scripts","onTryAutoSignup","item","script","document","createElement","async","body","appendChild","Alerts","prevProps","alert","message","name","join","non_field_errors","deleteLead","success","addLead","passwordNotMatch","withAlert","FormItem","Form","Item","antIcon","style","fontSize","spin","Login","handleSubmit","e","preventDefault","form","validateFields","values","onAuth","userName","password","history","errorMessage","getFieldDecorator","indicator","onSubmit","rules","required","prefix","color","htmlType","marginRight","React","WrappedLogin","create","user_type","setItem","stringify","component","rest","render","Spinner","animation","AdminDashboard","data-num","TeacherDashboard","StudentDashboard","Dashboard","isRole","getSchools","deleteSchool","getSchoolDetail","Option","Select","TeacherRegister","Steps","Step","validateFieldsAndScroll","handleConfirmBlur","value","target","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","normFile","console","log","Array","isArray","fileList","handleReset","resetFields","current","validator","onBlur","initialValue","WrappedTeacherRegister","TeacherImageUpload","uploading","handleUpload","formData","FormData","append","currentTeacher","multiple","showUploadList","showDownloadIcon","onRemove","file","beforeUpload","accept","UploadOutlined","disabled","marginTop","TeacherUpdate","image","date_of_birth","gender","street","city","country","zip_code","years_of_experience","academic_qualification","phone","emergency_contact1","emergency_contact2","blood_group","match","params","is_role","Object","keys","gutter","span","label","defaultValue","moment","textAlign","WrappedTeacherUpdate","Meta","Card","TeacherList","handleDelete","deleteTeacher","getTeachers","hoverable","cover","height","EyeOutlined","EditOutlined","DeleteOutlined","title","active","margin","grid","xs","sm","md","lg","xl","xxl","pagination","onChange","page","pageSize","bordered","dataSource","renderItem","confirm","Modal","TeacherDetails","showConfirmDelete","ExclamationCircleOutlined","content","onOk","onCancel","getTeacherDetail","extra","width","avatar","StudentRegister","WrappedStudentRegister","StudentList","deleteStudent","getStudents","StudentDetails","getStudentDetail","currentStudent","StudentImageUpload","StudentUpdate","father_name","mother_name","father_occupation","mother_occupation","father_phone","mother_phone","father_email","mother_email","mother_tongue","father_annual_income","mother_annual_income","previous_school_info","class_of_admission","year_of_admission","updateStudent","WrappedStudentUpdate","SchoolCreate","zipcode","owner_name","fax","website","createSchool","WrappedSchoolCreate","SchoolImageUpload","SchoolUpdate","updateSchool","WrappedSchoolUpdate","SchoolList","logo","SchoolDetails","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","padding","ref","node","searchInput","onPressEnter","handleSearch","marginBottom","display","SearchOutlined","size","filterIcon","filtered","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","select","text","filters","sorter","columns","filterMultiple","a","b","sortDirections","t","i","address","s","BaseRouter","exact","path","App","Boolean","window","location","hostname","app","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.735ad3c0.chunk.js","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  msg: {},\n  status: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status\n      };\n    // case actionTypes.AUTH_REGISTER_SUCCESS:\n    //   return {\n    //     msg: action.payload.msg,\n    //     status: action.payload.status\n    //   };\n    default:\n      return state;\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.CREATE_MESSAGE:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  first_name: null,\n  last_name: null,\n  username: null,\n  schoolId: null,\n  is_student: null,\n  is_teacher: null,\n  is_school_admin: null,\n  is_system_admin: null,\n  userId: null,\n  error: null,\n  loading: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.user.token,\n    first_name: action.user.first_name,\n    last_name: action.user.last_name,\n    username: action.user.username,\n    schoolId: action.user.schoolId,\n    is_student: action.user.is_student,\n    is_teacher: action.user.is_teacher,\n    is_school_admin: action.user.is_school_admin,\n    is_system_admin: action.user.is_system_admin,\n    userId: action.user.userId,\n    error: null,\n    loading: false\n  });\n};\n\n// const authRegisterSuccess = (state, action) => {\n//   return updateObject(state, {\n//     success: action.success,\n//     error: null,\n//     loading: false\n//   });\n// };\n\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    first_name: null,\n    last_name: null,\n    username: null,\n    schoolId: null,\n    is_student: null,\n    is_teacher: null,\n    is_school_admin: null,\n    is_system_admin: null,\n    userId: null,\n    error: null,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    // case actionTypes.AUTH_REGISTER_SUCCESS:\n    //   return authRegisterSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_REGISTER_SUCCESS = \"AUTH_REGISTER_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n\n// STUDENT\n// export const GET_STUDENT_LIST_START = \"GET_STUDENT_LIST_START\";\n// export const GET_STUDENT_LIST_FAIL = \"GET_STUDENT_LIST_FAIL\";\n// export const GET_STUDENT_LIST_SUCCESS = \"GET_STUDENT_LIST_SUCCESS\";\n\n// export const DELETE_STUDENT_START = \"DELETE_STUDENT_START\";\n// export const DELETE_STUDENT_FAIL = \"DELETE_STUDENT_FAIL\";\n// export const DELETE_STUDENT_SUCCESS = \"DELETE_STUDENT_SUCCESS\";\n\n// export const UPDATE_STUDENT_START = \"UPDATE_STUDENT_START\";\n// export const UPDATE_STUDENT_FAIL = \"UPDATE_STUDENT_FAIL\";\n// export const UPDATE_STUDENT_SUCCESS = \"UPDATE_STUDENT_SUCCESS\";\n\n// export const GET_STUDENT_DETAIL_START = \"GET_STUDENT_DETAIL_START\";\n// export const GET_STUDENT_DETAIL_FAIL = \"GET_STUDENT_DETAIL_FAIL\";\n// export const GET_STUDENT_DETAIL_SUCCESS = \"GET_STUDENT_DETAIL_SUCCESS\";\n\n// export const STUDENT_FORM_START = \"STUDENT_FORM_START\";\n// export const STUDENT_FORM_FAIL = \"STUDENT_FORM_FAIL\";\n// export const STUDENT_FORM_SUCCESS = \"STUDENT_FORM_SUCCESS\";\n\n\n// TEACHER\nexport const GET_USER_LIST_START = \"GET_USER_LIST_START\";\nexport const GET_USER_LIST_FAIL = \"GET_USER_LIST_FAIL\";\nexport const GET_USER_LIST_SUCCESS = \"GET_USER_LIST_SUCCESS\";\n\nexport const DELETE_USER_START = \"DELETE_USER_START\";\nexport const DELETE_USER_FAIL = \"DELETE_USER_FAIL\";\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\";\n\nexport const UPDATE_USER_START = \"UPDATE_USER_START\";\nexport const UPDATE_USER_FAIL = \"UPDATE_USER_FAIL\";\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\n\nexport const GET_USER_DETAIL_START = \"GET_USER_DETAIL_START\";\nexport const GET_USER_DETAIL_FAIL = \"GET_USER_DETAIL_FAIL\";\nexport const GET_USER_DETAIL_SUCCESS = \"GET_USER_DETAIL_SUCCESS\";\n\n\n// SCHOOL\nexport const GET_SCHOOL_LIST_START = \"GET_SCHOOL_LIST_START\";\nexport const GET_SCHOOL_LIST_FAIL = \"GET_SCHOOL_LIST_FAIL\";\nexport const GET_SCHOOL_LIST_SUCCESS = \"GET_SCHOOL_LIST_SUCCESS\";\n\nexport const DELETE_SCHOOL_START = \"DELETE_SCHOOL_START\";\nexport const DELETE_SCHOOL_FAIL = \"DELETE_SCHOOL_FAIL\";\nexport const DELETE_SCHOOL_SUCCESS = \"DELETE_SCHOOL_SUCCESS\";\n\nexport const UPDATE_SCHOOL_START = \"UPDATE_SCHOOL_START\";\nexport const UPDATE_SCHOOL_FAIL = \"UPDATE_SCHOOL_FAIL\";\nexport const UPDATE_SCHOOL_SUCCESS = \"UPDATE_SCHOOL_SUCCESS\";\n\nexport const GET_SCHOOL_DETAIL_START = \"GET_SCHOOL_DETAIL_START\";\nexport const GET_SCHOOL_DETAIL_FAIL = \"GET_SCHOOL_DETAIL_FAIL\";\nexport const GET_SCHOOL_DETAIL_SUCCESS = \"GET_SCHOOL_DETAIL_SUCCESS\";\n\nexport const CREATE_SCHOOL_START = \"CREATE_SCHOOL_START\";\nexport const CREATE_SCHOOL_FAIL = \"CREATE_SCHOOL_FAIL\";\nexport const CREATE_SCHOOL_SUCCESS = \"CREATE_SCHOOL_SUCCESS\";\n\n\n\n\n\n// Just To Avoid errors\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  schools: [],\r\n  currentSchool: {},\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nconst getSchoolListStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getSchoolListSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    schools: action.schools,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getSchoolListFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst deleteSchoolStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst deleteSchoolSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentSchool: action.school,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst deleteSchoolFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst updateSchoolStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst updateSchoolSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentSchool: action.school,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst updateSchoolFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getSchoolDetailStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getSchoolDetailSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentSchool: action.school,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getSchoolDetailFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst createSchoolStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst createSchoolSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst createSchoolFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_SCHOOL_LIST_START:\r\n      return getSchoolListStart(state, action);\r\n    case actionTypes.GET_SCHOOL_LIST_SUCCESS:\r\n      return getSchoolListSuccess(state, action);\r\n    case actionTypes.GET_SCHOOL_LIST_FAIL:\r\n      return getSchoolListFail(state, action);\r\n    case actionTypes.DELETE_SCHOOL_START:\r\n      return deleteSchoolStart(state, action);\r\n    case actionTypes.DELETE_SCHOOL_SUCCESS:\r\n      return deleteSchoolSuccess(state, action);\r\n    case actionTypes.DELETE_SCHOOL_FAIL:\r\n      return deleteSchoolFail(state, action);\r\n    case actionTypes.UPDATE_SCHOOL_START:\r\n      return updateSchoolStart(state, action);\r\n    case actionTypes.UPDATE_SCHOOL_SUCCESS:\r\n      return updateSchoolSuccess(state, action);\r\n    case actionTypes.UPDATE_SCHOOL_FAIL:\r\n      return updateSchoolFail(state, action);\r\n    case actionTypes.GET_SCHOOL_DETAIL_START:\r\n      return getSchoolDetailStart(state, action);\r\n    case actionTypes.GET_SCHOOL_DETAIL_SUCCESS:\r\n      return getSchoolDetailSuccess(state, action);\r\n    case actionTypes.GET_SCHOOL_DETAIL_FAIL:\r\n      return getSchoolDetailFail(state, action);\r\n    case actionTypes.CREATE_SCHOOL_START:\r\n      return createSchoolStart(state, action);\r\n    case actionTypes.CREATE_SCHOOL_SUCCESS:\r\n      return createSchoolSuccess(state, action);\r\n    case actionTypes.CREATE_SCHOOL_FAIL:\r\n      return createSchoolFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  currentUser: {},\r\n  error: null,\r\n  loading: false\r\n};\r\n\r\nconst getUserListStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getUserListSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    users: action.users,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getUserListFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst deleteUserStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst deleteUserSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentUser: action.user,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst deleteUserFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst updateUserStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst updateUserSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentUser: action.user,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst updateUserFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getUserDetailStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst getUserDetailSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentUser: action.user,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst getUserDetailFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_USER_LIST_START:\r\n      return getUserListStart(state, action);\r\n    case actionTypes.GET_USER_LIST_SUCCESS:\r\n      return getUserListSuccess(state, action);\r\n    case actionTypes.GET_USER_LIST_FAIL:\r\n      return getUserListFail(state, action);\r\n    case actionTypes.DELETE_USER_START:\r\n      return deleteUserStart(state, action);\r\n    case actionTypes.DELETE_USER_SUCCESS:\r\n      return deleteUserSuccess(state, action);\r\n    case actionTypes.DELETE_USER_FAIL:\r\n      return deleteUserFail(state, action);\r\n    case actionTypes.UPDATE_USER_START:\r\n      return updateUserStart(state, action);\r\n    case actionTypes.UPDATE_USER_SUCCESS:\r\n      return updateUserSuccess(state, action);\r\n    case actionTypes.UPDATE_USER_FAIL:\r\n      return updateUserFail(state, action);\r\n    case actionTypes.GET_USER_DETAIL_START:\r\n      return getUserDetailStart(state, action);\r\n    case actionTypes.GET_USER_DETAIL_SUCCESS:\r\n      return getUserDetailSuccess(state, action);\r\n    case actionTypes.GET_USER_DETAIL_FAIL:\r\n      return getUserDetailFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from \"redux\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\nimport schools from \"./schools\";\nimport users from \"./users\";\n\nexport default combineReducers({\n  errors,\n  messages,\n  auth,\n  schools,\n  users,\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n// const composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import * as actionTypes from \"./actionTypes\";\n\n// CREATE MESSAGE\nexport const createMessage = msg => {\n  return {\n    type: actionTypes.CREATE_MESSAGE,\n    payload: msg\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: actionTypes.GET_ERRORS,\n    payload: { msg, status }\n  };\n};\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\nimport { returnErrors } from \"./messages\";\r\n\r\n\r\nconst getUserListStart = () => {\r\n  return {\r\n    type: actionTypes.GET_USER_LIST_START\r\n  };\r\n};\r\n\r\nconst getUserListSuccess = users => {\r\n  return {\r\n    type: actionTypes.GET_USER_LIST_SUCCESS,\r\n    users\r\n  };\r\n};\r\n\r\nconst getUserListFail = error => {\r\n  return {\r\n    type: actionTypes.GET_USER_LIST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getUsers = token => {\r\n  return dispatch => {\r\n    dispatch(getUserListStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/users/\")\r\n      .then(res => {\r\n        const users = res.data;\r\n        dispatch(getUserListSuccess(users));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getUserListFail());\r\n      });\r\n  };\r\n};\r\n\r\nconst deleteUserStart = () => {\r\n  return {\r\n    type: actionTypes.DELETE_USER_START\r\n  };\r\n};\r\n\r\nconst deleteUserSuccess = user => {\r\n  return {\r\n    type: actionTypes.DELETE_USER_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nconst deleteUserFail = error => {\r\n  return {\r\n    type: actionTypes.DELETE_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const deleteUser = (token, id) => {\r\n  return dispatch => {\r\n    dispatch(deleteUserStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .delete(`http://127.0.0.1:8000/users/${id}/`)\r\n      .then(res => {\r\n        const user = res.data;\r\n        dispatch(deleteUserSuccess(user));\r\n      })\r\n      .catch(err => {\r\n        dispatch(deleteUserFail());\r\n      });\r\n  };\r\n};\r\n\r\nconst updateUserStart = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_USER_START\r\n  };\r\n};\r\n\r\nconst updateUserSuccess = user => {\r\n  return {\r\n    type: actionTypes.UPDATE_USER_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nconst updateUserFail = error => {\r\n  return {\r\n    type: actionTypes.UPDATE_USER_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const updateUser = (token, id, user) => {\r\n  return dispatch => {\r\n    dispatch(updateUserStart());\r\n    axios.defaults.headers = {\r\n      // \"Content-Type\": \"multipart/form-data\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .put(`http://127.0.0.1:8000/users/${id}/`, user)\r\n      .then(res => {\r\n        const user = res.data;\r\n        dispatch(updateUserSuccess(user));\r\n      })\r\n      .catch(err => {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch(updateUserFail(err));\r\n      });\r\n  };\r\n};\r\n\r\n// export const updateUserImage = (token, id, user) => {\r\n//   return dispatch => {\r\n//     dispatch(updateSchoolStart());\r\n//     axios.defaults.headers = {\r\n//       \"Content-Type\": \"multipart/form-data\",\r\n//       // \"Content-Type\": \"application/json\",\r\n//       Authorization: `Token ${token}`\r\n//     };\r\n//     axios\r\n//       .put(`http://127.0.0.1:8000/users/${id}/`, user)\r\n//       .then(res => {\r\n//         const user = res.data;\r\n//         dispatch(updateUserSuccess(user));\r\n//       })\r\n//       .catch(err => {\r\n//         dispatch(returnErrors(err.response.data, err.response.status));\r\n//         dispatch(updateUserFail(err));\r\n//       });\r\n//   };\r\n// };\r\n\r\nconst getUserDetailStart = () => {\r\n  return {\r\n    type: actionTypes.GET_USER_DETAIL_START\r\n  };\r\n};\r\n\r\nconst getUserDetailSuccess = user => {\r\n  return {\r\n    type: actionTypes.GET_USER_DETAIL_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nconst getUserDetailFail = error => {\r\n  return {\r\n    type: actionTypes.GET_USER_DETAIL_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getUserDetail = (token, id) => {\r\n  return dispatch => {\r\n    dispatch(getUserDetailStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/users/${id}/`)\r\n      .then(res => {\r\n        const user = res.data;\r\n        dispatch(getUserDetailSuccess(user));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getUserDetailFail());\r\n      });\r\n  };\r\n};\r\n","const Hoc = props => props.children;\n\nexport default Hoc;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions/users\";\n// import { logout } from \"../../actions/auth\";\nimport Hoc from '../../hoc/hoc'\n\nexport class Header extends Component {\n    \n    componentDidMount() {\n        if (this.props.token !== undefined && this.props.token !== null) {\n        this.props.getUsers(this.props.token);\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.token !== this.props.token) {\n            if (newProps.token !== undefined && newProps.token !== null) {\n                this.props.getUsers(newProps.token);\n            }\n        }\n    }\n    render() {\n        const { isAuthenticated, logout, user } = this.props;\n        // const { isAuthenticated, user } = this.props.auth;\n        let userType;\n        let profileLink = \"\";\n        if (user.is_system_admin) {\n            userType = \"System Admin\";\n            profileLink = `/profile/a/${user.userId}`\n        }\n        else if (user.is_school_admin) {\n            userType = \"School Admin\";\n            profileLink = `/profile/t/${user.userId}`\n        }\n        else if (user.is_teacher) {\n            userType = \"Teacher\";\n            profileLink = `/profile/t/${user.userId}`\n        }\n        else if (user.is_student) {\n            userType = \"Student\";\n            profileLink = `/profile/s/${user.userId}`\n        }\n\n        const authLinks = (\n            <div className=\"navbar navbar-expand-md header-menu-one bg-light\">\n                <div className=\"nav-bar-header-one\">\n                    <div className=\"header-logo\">\n                        <Link to=\"/\">\n                            <img src=\"/static/assets/img/logo.png\" alt=\"logo\" />\n                        </Link>\n                    </div>\n                    <div className=\"toggle-button sidebar-toggle\">\n                        <button type=\"button\" className=\"item-link\">\n                            <span className=\"btn-icon-wrap\">\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"d-md-none mobile-nav-bar\">\n                    <button className=\"navbar-toggler pulse-animation\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-navbar\" aria-expanded=\"false\">\n                        <i className=\"far fa-arrow-alt-circle-down\"></i>\n                    </button>\n                    <button type=\"button\" className=\"navbar-toggler sidebar-toggle-mobile\">\n                        <i className=\"fas fa-bars\"></i>\n                    </button>\n                </div>\n                <div className=\"header-main-menu collapse navbar-collapse\" id=\"mobile-navbar\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"navbar-item header-search-bar\">\n                            <div className=\"input-group stylish-input-group\">\n                                <span className=\"input-group-addon\">\n                                    <button type=\"submit\">\n                                        <span className=\"flaticon-search\" aria-hidden=\"true\"></span>\n                                    </button>\n                                </span>\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Find Something . . .\" />\n                            </div>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav\">\n                        <li className=\"navbar-item dropdown header-admin\">\n                            <a className=\"navbar-nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\"\n                                aria-expanded=\"false\">\n                                <div className=\"admin-title\">\n                                    <h5 className=\"item-title\">{user.first_name} {user.last_name}</h5>\n                                    <span>{userType}</span>\n                                </div>\n                                <div className=\"admin-img\">\n                                    <img src=\"/static/assets/img/figure/admin.jpg\" alt=\"Admin\" />\n                                </div>\n                            </a>\n                            <div className=\"dropdown-menu dropdown-menu-right\">\n                                <div className=\"item-header\">\n                                    <h6 className=\"item-title\">{user.first_name} {user.last_name}</h6>\n                                </div>\n                                <div className=\"item-content\">\n                                    <ul className=\"settings-list\">\n                                        <li><Link to={profileLink}><i className=\"flaticon-user\"></i>My Profile</Link></li>\n                                        <li><a href=\"#\"><i className=\"flaticon-list\"></i>Task</a></li>\n                                        <li><a href=\"#\"><i className=\"flaticon-chat-comment-oval-speech-bubble-with-text-lines\"></i>Message</a></li>\n                                        <li><a href=\"#\"><i className=\"flaticon-gear-loading\"></i>Account Settings</a></li>\n                                        <li>\n                                            {/* <button\n                                                onClick={this.props.logout}\n                                                className=\"nav-link btn btn-info btn-sm text-light\"\n                                            >\n                                                <i className=\"flaticon-turn-off\"></i>\n                                                Logout\n                                            </button> */}\n                                            <a onClick={logout} href=\"#\"><i className=\"flaticon-turn-off\"></i>Log Out</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </li>\n                        {/* <li className=\"navbar-item dropdown header-message\">\n                            <a className=\"navbar-nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\"\n                                aria-expanded=\"false\">\n                                <i className=\"far fa-envelope\"></i>\n                                <div className=\"item-title d-md-none text-16 mg-l-10\">Message</div>\n                                <span>5</span>\n                            </a>\n\n                            <div className=\"dropdown-menu dropdown-menu-right\">\n                                <div className=\"item-header\">\n                                    <h6 className=\"item-title\">05 Message</h6>\n                                </div>\n                                <div className=\"item-content\">\n                                    <div className=\"media\">\n                                        <div className=\"item-img bg-skyblue author-online\">\n                                            <img src=\"/static/assets/img/figure/student11.png\" alt=\"img\" />\n                                        </div>\n                                        <div className=\"media-body space-sm\">\n                                            <div className=\"item-title\">\n                                                <a href=\"#\">\n                                                    <span className=\"item-name\">Maria Zaman</span> \n                                                    <span className=\"item-time\">18:30</span> \n                                                </a>  \n                                            </div>\n                                            <p>What is the reason of buy this item. \n                                            Is it usefull for me.....</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"media\">\n                                        <div className=\"item-img bg-yellow author-online\">\n                                            <img src=\"/static/assets/img/figure/student12.png\" alt=\"img\" />\n                                        </div>\n                                        <div className=\"media-body space-sm\">\n                                            <div className=\"item-title\">\n                                                <a href=\"#\">\n                                                    <span className=\"item-name\">Benny Roy</span> \n                                                    <span className=\"item-time\">10:35</span> \n                                                </a>  \n                                            </div>\n                                            <p>What is the reason of buy this item. \n                                            Is it usefull for me.....</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"media\">\n                                        <div className=\"item-img bg-pink\">\n                                            <img src=\"/static/assets/img/figure/student13.png\" alt=\"img\" />\n                                        </div>\n                                        <div className=\"media-body space-sm\">\n                                            <div className=\"item-title\">\n                                                <a href=\"#\">\n                                                    <span className=\"item-name\">Steven</span> \n                                                    <span className=\"item-time\">02:35</span> \n                                                </a>  \n                                            </div>\n                                            <p>What is the reason of buy this item. \n                                            Is it usefull for me.....</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"media\">\n                                        <div className=\"item-img bg-violet-blue\">\n                                            <img src=\"/static/assets/img/figure/student11.png\" alt=\"img\" />\n                                        </div>\n                                        <div className=\"media-body space-sm\">\n                                            <div className=\"item-title\">\n                                                <a href=\"#\">\n                                                    <span className=\"item-name\">Joshep Joe</span> \n                                                    <span className=\"item-time\">12:35</span> \n                                                </a>  \n                                            </div>\n                                            <p>What is the reason of buy this item. \n                                            Is it usefull for me.....</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </li> */}\n                        <li className=\"navbar-item dropdown header-notification\">\n                            <a className=\"navbar-nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\"\n                                aria-expanded=\"false\">\n                                <i className=\"far fa-bell\"></i>\n                                <div className=\"item-title d-md-none text-16 mg-l-10\">Notification</div>\n                                <span>8</span>\n                            </a>\n\n                            <div className=\"dropdown-menu dropdown-menu-right\">\n                                <div className=\"item-header\">\n                                    <h6 className=\"item-title\">03 Notifiacations</h6>\n                                </div>\n                                <div className=\"item-content\">\n                                    <div className=\"media\">\n                                        <div className=\"item-icon bg-skyblue\">\n                                            <i className=\"fas fa-check\"></i>\n                                        </div>\n                                        <div className=\"media-body space-sm\">\n                                            <div className=\"post-title\">Complete Your Registration</div>\n                                            <span>1 Mins ago</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"media\">\n                                        <div className=\"item-icon bg-orange\">\n                                            <i className=\"fas fa-calendar-alt\"></i>\n                                        </div>\n                                        <div className=\"media-body space-sm\">\n                                            <div className=\"post-title\">Director Meeting</div>\n                                            <span>20 Mins ago</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"media\">\n                                        <div className=\"item-icon bg-violet-blue\">\n                                            <i className=\"fas fa-cogs\"></i>\n                                        </div>\n                                        <div className=\"media-body space-sm\">\n                                            <div className=\"post-title\">Update Password</div>\n                                            <span>45 Mins ago</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                        <li className=\"navbar-item dropdown header-language\">\n                            <a className=\"navbar-nav-link dropdown-toggle\" href=\"#\" role=\"button\" \n                            data-toggle=\"dropdown\" aria-expanded=\"false\"><i className=\"fas fa-globe-americas\"></i>EN</a>\n                            <div className=\"dropdown-menu dropdown-menu-right\">\n                                <a className=\"dropdown-item\" href=\"#\">English</a>\n                                <a className=\"dropdown-item\" href=\"#\">Spanish</a>\n                                <a className=\"dropdown-item\" href=\"#\">Franchis</a>\n                                <a className=\"dropdown-item\" href=\"#\">Chiness</a>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            \n        );\n    \n        // const guestLinks = (\n        //   <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n        //     <li className=\"nav-item\">\n        //       <Link to=\"/register\" className=\"nav-link\">\n        //         Register\n        //       </Link>\n        //     </li>\n        //     <li className=\"nav-item\">\n        //       <Link to=\"/login\" className=\"nav-link\">\n        //         Login\n        //       </Link>\n        //     </li>\n        //   </ul>\n        // );\n        \n    return ( \n      <div>\n        {isAuthenticated ? authLinks : ''}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    users: state.users.users,\n    loading: state.users.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: token => dispatch(actions.getUsers(token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer-wrap-layout1\">\r\n        <div className=\"copyright\">© Copyrights <a href=\"#\">Eco Dev System</a> 2020. <a\r\n                  href=\"#\"></a></div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport { Menu, Button } from 'antd';\r\nimport {\r\n    DashboardOutlined,\r\n    TeamOutlined,\r\n    HomeOutlined,\r\n    AppstoreOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    PieChartOutlined,\r\n    DesktopOutlined,\r\n    InboxOutlined\r\n} from '@ant-design/icons';\r\n// import { MdGroup, MdSchool } from 'react-icons/md';\r\n\r\nimport Hoc from '../../hoc/hoc';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class Sidebar extends Component {\r\n    rootSubmenuKeys = [\"dashboard\", \"schools\", \"teachers\", \"students\"]\r\n    state = {\r\n        admin_links: [],\r\n        schooladmin_links: [],\r\n        teacher_links: [],\r\n        student_links: [],\r\n        openKeys: [\"dashboard\"],\r\n        collapsed: false,\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const dashboard = {\r\n            icon: \"flaticon-dashboard\",\r\n            key: \"dashboard\",\r\n            dropdownTitleLink: '/',\r\n            dropdownTitle: \"Dashboard\",\r\n            dropdowns: [],\r\n        }\r\n\r\n        const schools = {\r\n            icon: \"flaticon-multiple-users-silhouette\",\r\n            key: \"schools\",\r\n            dropdownTitleLink: '#',\r\n            dropdownTitle: \" Schools\",\r\n            dropdowns: [\r\n                {\r\n                    link: '/school/all-schools',\r\n                    linkTitle: 'All Schools'\r\n                },\r\n                {\r\n                    link: '/school/register-school',\r\n                    linkTitle: 'Add School'\r\n                },\r\n            ],\r\n        }\r\n\r\n        const teachers = {\r\n            icon: \"flaticon-multiple-users-silhouette\",\r\n            key: \"teachers\",\r\n            dropdownTitleLink: ' #',\r\n            dropdownTitle: \" Teachers\",\r\n            dropdowns: [\r\n                {\r\n                    link: '/teacher/all-teachers',\r\n                    linkTitle: 'All Teacher'\r\n                },\r\n                {\r\n                    link: '/teacher/register-teacher',\r\n                    linkTitle: 'Add Teacher'\r\n                },\r\n            ],\r\n        }\r\n\r\n        const students = {\r\n            icon: \"flaticon-classmates\",\r\n            key: \"students\",\r\n            dropdownTitleLink: '#',\r\n            dropdownTitle: \" Students\",\r\n            dropdowns: [\r\n                {\r\n                    link: '/student/all-students',\r\n                    linkTitle: 'All Students'\r\n                },\r\n                {\r\n                    link: '/student/register-student',\r\n                    linkTitle: 'Add Student'\r\n                },\r\n            ],\r\n        }\r\n\r\n        this.state.admin_links.push(\r\n            dashboard,\r\n            schools,\r\n            teachers,\r\n            students,\r\n        )\r\n\r\n        this.state.schooladmin_links.push(\r\n            dashboard,\r\n            teachers,\r\n            students,\r\n        )\r\n\r\n        this.state.teacher_links.push(\r\n            dashboard,\r\n            students,\r\n        )\r\n\r\n        this.state.student_links.push(\r\n            dashboard,\r\n        )\r\n    }\r\n\r\n    // rootSubmenuKeys = ['0', '1', '2'];\r\n\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n          collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    onOpenChange = openKeys => {\r\n      const latestOpenKey = openKeys.find(key => this.state.openKeys.indexOf(key) === -1);\r\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n        this.setState({ openKeys });\r\n      } else {\r\n        this.setState({\r\n          openKeys: latestOpenKey ? [latestOpenKey] : [],\r\n        });\r\n      }\r\n    };\r\n\r\n    render() {\r\n        const { isAuthenticated, user } = this.props;\r\n\r\n        let admin = this.state.admin_links.map((val, key) => {\r\n            return (   \r\n                <li key={key} className=\"nav-item sidebar-nav-item\">\r\n                    <Link to={val.dropdownTitleLink} className=\"nav-link\"><i className={val.icon}></i><span>{val.dropdownTitle}</span></Link>\r\n                    {val.dropdowns.length !== 0 ?\r\n                        (\r\n                            <ul className=\"nav sub-group-menu\">\r\n                                {\r\n                                    val.dropdowns.map((v, k) => {\r\n                                        return (\r\n                                            <li key={k} className=\"nav-item\">\r\n                                                <Link to={v.link} className=\"nav-link\"><i className=\"fas fa-angle-right\"></i>{v.linkTitle}</Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        )\r\n                        :\r\n                        ''\r\n                    }\r\n                    \r\n                </li>\r\n            )\r\n        })\r\n\r\n        let schooladmin = this.state.schooladmin_links.map((val, key) => {\r\n            return (   \r\n                <li key={key} className=\"nav-item sidebar-nav-item\">\r\n                    <Link to={val.dropdownTitleLink} className=\"nav-link\"><i className={val.icon}></i><span>{val.dropdownTitle}</span></Link>\r\n                    {val.dropdowns.length !== 0 ?\r\n                        (\r\n                            <ul className=\"nav sub-group-menu\">\r\n                                {\r\n                                    val.dropdowns.map((v, k) => {\r\n                                        return (\r\n                                            <li key={k} className=\"nav-item\">\r\n                                                <Link to={v.link} className=\"nav-link\"><i className=\"fas fa-angle-right\"></i>{v.linkTitle}</Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        )\r\n                        :\r\n                        ''\r\n                    }\r\n                    \r\n                </li>\r\n            )\r\n        })\r\n\r\n        let teacher = this.state.teacher_links.map((val, key) => {\r\n            return (   \r\n                <li key={key} className=\"nav-item sidebar-nav-item\">\r\n                    <Link to={val.dropdownTitleLink} className=\"nav-link\"><i className={val.icon}></i><span>{val.dropdownTitle}</span></Link>\r\n                    {val.dropdowns.length !== 0 ?\r\n                        (\r\n                            <ul className=\"nav sub-group-menu\">\r\n                                {\r\n                                    val.dropdowns.map((v, k) => {\r\n                                        return (\r\n                                            <li key={k} className=\"nav-item\">\r\n                                                <Link to={v.link} className=\"nav-link\"><i className=\"fas fa-angle-right\"></i>{v.linkTitle}</Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        )\r\n                        :\r\n                        ''\r\n                    }\r\n                    \r\n                </li>\r\n            )\r\n        })\r\n\r\n        let student = this.state.student_links.map((val, key) => {\r\n            return (   \r\n                <li key={key} className=\"nav-item sidebar-nav-item\">\r\n                    <Link to={val.dropdownTitleLink} className=\"nav-link\"><i className={val.icon}></i><span>{val.dropdownTitle}</span></Link>\r\n                    {val.dropdowns.length !== 0 ?\r\n                        (\r\n                            <ul className=\"nav sub-group-menu\">\r\n                                {\r\n                                    val.dropdowns.map((v, k) => {\r\n                                        return (\r\n                                            <li key={k} className=\"nav-item\">\r\n                                                <Link to={v.link} className=\"nav-link\"><i className=\"fas fa-angle-right\"></i>{v.linkTitle}</Link>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        )\r\n                        :\r\n                        ''\r\n                    }\r\n                    \r\n                </li>\r\n            )\r\n        })\r\n        let sidebar_links;\r\n\r\n        if (user.is_system_admin) {\r\n            sidebar_links = admin\r\n        } else if (user.is_school_admin) {\r\n            sidebar_links = schooladmin\r\n        } else if (user.is_teacher) {\r\n            sidebar_links = teacher\r\n        } else if (user.is_student) {\r\n            sidebar_links = student\r\n        }\r\n\r\n        const sidebar = (\r\n            <div className=\"sidebar-main sidebar-menu-one sidebar-expand-md sidebar-color\">\r\n                <div className=\"mobile-sidebar-header d-md-none\">\r\n                    <div className=\"header-logo\">\r\n                        <Link to=\"/\"><img src=\"/static/assets/img/logo1.png\" alt=\"logo\" /></Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sidebar-menu-content\">\r\n                    \r\n                    <ul className=\"nav nav-sidebar-menu sidebar-toggle-view\"> \r\n                        {sidebar_links}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            // <div style={{ width: \"25rem\" }} >\r\n            //             <Button type=\"primary\" onClick={this.toggleCollapsed} style={{ marginBottom: 16 }}>\r\n            //                 {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\r\n            //             </Button>\r\n            //     <Menu\r\n            //         mode=\"inline\"\r\n            //         openKeys={this.state.openKeys}  \r\n            //         onOpenChange={this.onOpenChange}\r\n            //         // style={{ width: 256 }}\r\n            //         theme=\"dark\"\r\n            //         inlineCollapsed={this.state.collapsed}\r\n            //     >\r\n            //         {sidebar_links}\r\n            //     </Menu>\r\n            // </div>\r\n        )\r\n    return (\r\n        <Hoc>\r\n            {\r\n            isAuthenticated ? sidebar : ''\r\n            }\r\n        </Hoc>\r\n        \r\n    )\r\n  }\r\n}","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { returnErrors } from \"./messages\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user\n  };\n};\n\n// export const authRegisterSuccess = success => {\n//   return {\n//     type: actionTypes.AUTH_REGISTER_SUCCESS,\n//     success: success\n//   };\n// };\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        const user = {\n          token: res.data.key,\n          first_name: res.data.user_type.first_name,\n          last_name: res.data.user_type.last_name,\n          username,\n          userId: res.data.user,\n          schoolId: res.data.user_type.school,\n          is_student: res.data.user_type.is_student,\n          is_teacher: res.data.user_type.is_teacher,\n          is_school_admin: res.data.user_type.is_school_admin,\n          is_system_admin: res.data.user_type.is_system_admin,\n          expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        };\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authRegister = (\n  // token,\n  // teacher\n  first_name, \n  last_name, \n  username, \n  email, \n  password1, \n  password2,\n  school,\n  is_student, \n  is_teacher, \n  is_school_admin, \n  is_system_admin, \n  // image, \n  // date_of_birth, \n  // gender, \n  // street, \n  // city, \n  // state, \n  // country, \n  // zip_code, \n  // years_of_experience, \n  // academic_qualification, \n  // phone,\n  // emergency_contact1, \n  // emergency_contact2, \n  // blood_group,\n) => {\n  return dispatch => {\n    dispatch(authStart());\n\n    const teacher = {\n      first_name, \n      last_name, \n      username, \n      email, \n      password1, \n      password2,\n      school,\n      is_student, \n      is_teacher, \n      is_school_admin, \n      is_system_admin, \n      // image, \n      // date_of_birth, \n      // gender, \n      // street, \n      // city, \n      // state, \n      // country, \n      // zip_code, \n      // years_of_experience, \n      // academic_qualification, \n      // phone,\n      // emergency_contact1, \n      // emergency_contact2, \n      // blood_group,\n    }\n\n    // axios.defaults.headers = {\n    //   \"Content-Type\": \"application/json\",\n    //   Authorization: `Token ${token}`\n    // };\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", teacher)\n      .then(res => {\n        // const user = {\n        //   token: res.data.key,\n        //   first_name,\n        //   last_name,\n        //   username,\n        //   email,\n        //   userId: res.data.user,\n        //   is_student,\n        //   is_teacher,\n        //   is_school_admin,\n        //   expirationDate: new Date(new Date().getTime() + 3600 * 1000)\n        // };\n        // localStorage.setItem(\"registeration\", JSON.stringify(user));\n        // dispatch(authRegisterSuccess(res.response.data));\n        // dispatch(authSuccess(user));\n        // dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(returnErrors(err.response.data, err.response.status));\n        dispatch(authFail(err));\n      });\n  };\n};\n\n\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  // BrowserRouter as Router,\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport Header from './layout/Header';\r\nimport Footer from './layout/Footer';\r\nimport Sidebar from './layout/Sidebar';\r\n\r\nimport * as actions from \"../actions/auth\";\r\n\r\n\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    scripts: []\r\n  }\r\n\r\n    \r\n  componentWillMount() {\r\n    this.state.scripts.push(\r\n      { src: \"/static/assets/js/main.js\"},\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    if(this.props.isAuthenticated) {\r\n\r\n      this.state.scripts.map(item => {\r\n\r\n        const script = document.createElement(\"script\")\r\n        script.src = item.src\r\n        script.async = true\r\n        document.body.appendChild(script)\r\n\r\n\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"preloader\" />\r\n        <div id=\"wrapper\" className=\"wrapper\" >\r\n          <Header {...this.props} />\r\n          <div className=\"dashboard-page\">\r\n            <Sidebar {...this.props} />\r\n            \r\n            <div className=\"dashboard-content\">\r\n              {this.props.children}\r\n              <Footer {...this.props} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // componentDidUnmount() {\r\n  //   if (this.props.user.token === null){\r\n\r\n  //   }\r\n  // }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth,\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n    logout: () => dispatch(actions.logout())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import React, { Component, Fragment } from \"react\";\nimport { withAlert } from \"react-alert\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nexport class Alerts extends Component {\n  static propTypes = {\n    error: PropTypes.object.isRequired,\n    message: PropTypes.object.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, alert, message } = this.props;\n    if (error !== prevProps.error) {\n      if (error.msg.name) alert.error(`Name: ${error.msg.name.join()}`);\n      if (error.msg.email) alert.error(`Email: ${error.msg.email.join()}`);\n      if (error.msg.message)\n        alert.error(`Message: ${error.msg.message.join()}`);\n      if (error.msg.non_field_errors)\n        alert.error(error.msg.non_field_errors.join());\n      if (error.msg.username) alert.error(error.msg.username.join());\n    }\n\n    if (message !== prevProps.message) {\n      if (message.deleteLead) alert.success(message.deleteLead);\n      if (message.addLead) alert.success(message.addLead);\n      if (message.passwordNotMatch) alert.error(message.passwordNotMatch);\n    }\n  }\n\n  render() {\n    return <Fragment />;\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: state.errors,\n  message: state.messages\n});\n\nexport default connect(mapStateToProps)(withAlert(Alerts));\n","import React from \"react\";\nimport { Form, Icon, Input, Button, Spin } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as actions from \"../../actions/auth\";\n\nconst FormItem = Form.Item;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass Login extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.userName, values.password);\n        this.props.history.push(\"/\");\n        // this.forceUpdate\n      }\n    });\n  };\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = <p>{this.props.error.message}</p>;\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div className=\"col-md-4 m-auto\">\n        <div className=\"card card-body mt-5\">\n          {errorMessage}\n          <h2>Login</h2>\n        {this.props.loading ? (\n          <Spin indicator={antIcon} />\n          ) : (\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <FormItem>\n              {getFieldDecorator(\"userName\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Username\"\n                />\n              )}\n            </FormItem>\n\n            <FormItem>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </FormItem>\n\n            <FormItem>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{ marginRight: \"10px\" }}\n              >\n                Login\n              </Button>\n              {/* Or\n              <NavLink style={{ marginRight: \"10px\" }} to=\"/signup/\">\n                {\" \"}\n                signup\n              </NavLink> */}\n            </FormItem>\n          </Form>\n        )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedLogin = Form.create()(Login);\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token,\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WrappedLogin);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (auth.loading) {\n        return <Spinner animation=\"border\" ></Spinner>;\n      } else if (!auth.token) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Component {...props} />;\n      }\n    }}\n  />\n);\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\n// const mapStateToProps = state => {\n//   return {\n//     isAuthenticated: state.auth.token !== null\n//   }\n// }\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react'\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Social from '../layout/Social';\r\nimport Footer from '../layout/Footer';\r\n\r\nexport default class AdminDashboard extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"breadcrumbs-area\">\r\n                <h3>Admin Dashboard</h3>\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"/\">Home</a>\r\n                    </li>\r\n                    <li>Admin</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"row gutters-20\">\r\n                <div className=\"col-xl-3 col-sm-6 col-12\">\r\n                    <div className=\"dashboard-summery-one mg-b-20\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-icon bg-light-green \">\r\n                                    <i className=\"flaticon-classmates text-green\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-content\">\r\n                                    <div className=\"item-title\">Students</div>\r\n                                    <div className=\"item-number\"><span className=\"counter\" data-num=\"150000\">1,50,000</span></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-3 col-sm-6 col-12\">\r\n                    <div className=\"dashboard-summery-one mg-b-20\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-icon bg-light-blue\">\r\n                                    <i className=\"flaticon-multiple-users-silhouette text-blue\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-content\">\r\n                                    <div className=\"item-title\">Teachers</div>\r\n                                    <div className=\"item-number\"><span className=\"counter\" data-num=\"2250\">2,250</span></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-3 col-sm-6 col-12\">\r\n                    <div className=\"dashboard-summery-one mg-b-20\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-icon bg-light-yellow\">\r\n                                    <i className=\"flaticon-couple text-orange\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-content\">\r\n                                    <div className=\"item-title\">School Admin</div>\r\n                                    <div className=\"item-number\"><span className=\"counter\" data-num=\"5690\">5,690</span></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-3 col-sm-6 col-12\">\r\n                    <div className=\"dashboard-summery-one mg-b-20\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-icon bg-light-red\">\r\n                                    <i className=\"flaticon-money text-red\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"item-content\">\r\n                                    <div className=\"item-title\">Earnings</div>\r\n                                    <div className=\"item-number\"><span>$</span><span className=\"counter\" data-num=\"193000\">1,93,000</span></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Social extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row gutters-20\">\r\n        <div className=\"col-lg-3 col-sm-6 col-12\">\r\n            <div className=\"card dashboard-card-seven\">\r\n                <div className=\"social-media bg-fb hover-fb\">\r\n                    <div className=\"media media-none--lg\">\r\n                        <div className=\"social-icon\">\r\n                            <i className=\"fab fa-facebook-f\"></i>\r\n                        </div>\r\n                        <div className=\"media-body space-sm\">\r\n                            <h6 className=\"item-title\">Like us on facebook</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"social-like\">30,000</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-sm-6 col-12\">\r\n            <div className=\"card dashboard-card-seven\">\r\n                <div className=\"social-media bg-twitter hover-twitter\">\r\n                    <div className=\"media media-none--lg\">\r\n                            <div className=\"social-icon\">\r\n                            <i className=\"fab fa-twitter\"></i>\r\n                            </div>\r\n                            <div className=\"media-body space-sm\">\r\n                                <h6 className=\"item-title\">Follow us on twitter</h6>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"social-like\">1,11,000</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-sm-6 col-12\">\r\n            <div className=\"card dashboard-card-seven\">\r\n                <div className=\"social-media bg-gplus hover-gplus\">\r\n                    <div className=\"media media-none--lg\">\r\n                        <div className=\"social-icon\">\r\n                            <i className=\"fab fa-google-plus-g\"></i>\r\n                        </div>\r\n                        <div className=\"media-body space-sm\">\r\n                            <h6 className=\"item-title\">Follow us on googleplus</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"social-like\">19,000</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-lg-3 col-sm-6 col-12\">\r\n          <div className=\"card dashboard-card-seven\">\r\n              <div className=\"social-media bg-linkedin hover-linked\">\r\n                  <div className=\"media media-none--lg\">\r\n                      <div className=\"social-icon\">\r\n                      <i className=\"fab fa-linkedin-in\"></i>\r\n                      </div>\r\n                      <div className=\"media-body space-sm\">\r\n                          <h6 className=\"item-title\">Follow us on linked</h6>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"social-like\">45,000</div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TeacherDashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"breadcrumbs-area\">\r\n            <h3>Teacher Dashboard</h3>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"/\">Home</a>\r\n                </li>\r\n                <li>Teachers</li>\r\n            </ul>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-4-xxxl\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-6-xxxl col-lg-3 col-sm-6 col-12\">\r\n                      <div className=\"dashboard-summery-two\">\r\n                          <div className=\"item-icon bg-light-magenta\">\r\n                              <i className=\"flaticon-classmates text-magenta\"></i>\r\n                          </div>\r\n                          <div className=\"item-content\">\r\n                              <div className=\"item-number\"><span className=\"counter\" data-num=\"35000\">35,000</span></div>\r\n                              <div className=\"item-title\">Total Students</div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-6-xxxl col-lg-3 col-sm-6 col-12\">\r\n                      <div className=\"dashboard-summery-two\">\r\n                          <div className=\"item-icon bg-light-blue\">\r\n                              <i className=\"flaticon-shopping-list text-blue\"></i>\r\n                          </div>\r\n                          <div className=\"item-content\">\r\n                              <div className=\"item-number\"><span className=\"counter\" data-num=\"19050\">19,050</span></div>\r\n                              <div className=\"item-title\">Total Exams</div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-6-xxxl col-lg-3 col-sm-6 col-12\">\r\n                      <div className=\"dashboard-summery-two\">\r\n                          <div className=\"item-icon bg-light-yellow\">\r\n                              <i className=\"flaticon-mortarboard text-orange\"></i>\r\n                          </div>\r\n                          <div className=\"item-content\">\r\n                              <div className=\"item-number\"><span className=\"counter\" data-num=\"23890\">23,890</span></div>\r\n                              <div className=\"item-title\">Graduate Studes</div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-6-xxxl col-lg-3 col-sm-6 col-12\">\r\n                      <div className=\"dashboard-summery-two\">\r\n                          <div className=\"item-icon bg-light-red\">\r\n                              <i className=\"flaticon-money text-red\"></i>\r\n                          </div>\r\n                          <div className=\"item-content\">\r\n                              <div className=\"item-number\"><span>$</span><span className=\"counter\" data-num=\"2102050\">21,02,050</span></div>\r\n                              <div className=\"item-title\">Total Income</div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class StudentDashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n            <div className=\"breadcrumbs-area\">\r\n                <h3>Student Dashboard</h3>\r\n                <ul>\r\n                    <li>\r\n                        <a href=\"/\">Home</a>\r\n                    </li>\r\n                    <li>Student</li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"row\">\r\n                        \r\n                <div className=\"col-8-xxxl col-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"dashboard-summery-one\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"item-icon bg-light-magenta\">\r\n                                            <i className=\"flaticon-shopping-list text-magenta\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"item-content\">\r\n                                            <div className=\"item-title\">Notification</div>\r\n                                            <div className=\"item-number\"><span className=\"counter\" data-num=\"12\">12</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"dashboard-summery-one\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"item-icon bg-light-blue\">\r\n                                            <i className=\"flaticon-calendar text-blue\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"item-content\">\r\n                                            <div className=\"item-title\">Events</div>\r\n                                            <div className=\"item-number\"><span className=\"counter\" data-num=\"06\">06</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <div className=\"dashboard-summery-one\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"item-icon bg-light-yellow\">\r\n                                            <i className=\"flaticon-percentage-discount text-orange\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"item-content\">\r\n                                            <div className=\"item-title\">Attendance</div>\r\n                                            <div className=\"item-number\"><span className=\"counter\" data-num=\"94\">94</span><span>%</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AdminDashboard from \"./AdminDashboard\"\r\nimport TeacherDashboard from \"./TeacherDashboard\"\r\nimport StudentDashboard from \"./StudentDashboard\"\r\n\r\nclass Dashboard extends Component {\r\n\r\n  render() {\r\n\r\n    const { is_system_admin, is_school_admin, is_teacher, is_student } = this.props.isRole\r\n    if (is_system_admin) {\r\n      return <AdminDashboard />\r\n    } else if (is_school_admin || is_teacher) {\r\n        return <TeacherDashboard />\r\n    } else if (is_student) {\r\n      return <StudentDashboard />\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isRole: state.auth,\r\n    token: state.auth.token,\r\n    // teacher: state.teachers.teacher,\r\n    // teacherId: state.teachers.userId,\r\n    // loading: state.assignments.loading,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // getTeacher: (token, id) => dispatch(getTeacher(token, id)),\r\n    // createGradedASNT: (token, asnt) => dispatch(createGradedASNT(token, asnt))\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\nimport { returnErrors } from \"./messages\";\r\n\r\nconst getSchoolListStart = () => {\r\n  return {\r\n    type: actionTypes.GET_SCHOOL_LIST_START\r\n  };\r\n};\r\n\r\nconst getSchoolListSuccess = schools => {\r\n  return {\r\n    type: actionTypes.GET_SCHOOL_LIST_SUCCESS,\r\n    schools\r\n  };\r\n};\r\n\r\nconst getSchoolListFail = error => {\r\n  return {\r\n    type: actionTypes.GET_SCHOOL_LIST_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getSchools = token => {\r\n  return dispatch => {\r\n    dispatch(getSchoolListStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/schools/\")\r\n      .then(res => {\r\n        const schools = res.data;\r\n        dispatch(getSchoolListSuccess(schools));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getSchoolListFail());\r\n      });\r\n  };\r\n};\r\n\r\nconst deleteSchoolStart = () => {\r\n  return {\r\n    type: actionTypes.DELETE_SCHOOL_START\r\n  };\r\n};\r\n\r\nconst deleteSchoolSuccess = school => {\r\n  return {\r\n    type: actionTypes.DELETE_SCHOOL_SUCCESS,\r\n    school\r\n  };\r\n};\r\n\r\nconst deleteSchoolFail = error => {\r\n  return {\r\n    type: actionTypes.DELETE_SCHOOL_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const deleteSchool = (token, id) => {\r\n  return dispatch => {\r\n    dispatch(deleteSchoolStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .delete(`http://127.0.0.1:8000/schools/${id}/`)\r\n      .then(res => {\r\n        const school = res.data;\r\n        dispatch(deleteSchoolSuccess(school));\r\n      })\r\n      .catch(err => {\r\n        dispatch(deleteSchoolFail());\r\n      });\r\n  };\r\n};\r\n\r\nconst updateSchoolStart = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_SCHOOL_START\r\n  };\r\n};\r\n\r\nconst updateSchoolSuccess = school => {\r\n  return {\r\n    type: actionTypes.UPDATE_SCHOOL_SUCCESS,\r\n    school\r\n  };\r\n};\r\n\r\nconst updateSchoolFail = error => {\r\n  return {\r\n    type: actionTypes.UPDATE_SCHOOL_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const updateSchool = (token, id, school) => {\r\n  return dispatch => {\r\n    dispatch(updateSchoolStart());\r\n    axios.defaults.headers = {\r\n      // \"Content-Type\": \"multipart/form-data\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .put(`http://127.0.0.1:8000/schools/${id}/`, school)\r\n      .then(res => {\r\n        const school = res.data;\r\n        dispatch(updateSchoolSuccess(school));\r\n      })\r\n      .catch(err => {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch(updateSchoolFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateSchoolImage = (token, id, school) => {\r\n  return dispatch => {\r\n    dispatch(updateSchoolStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      // \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .put(`http://127.0.0.1:8000/schools/${id}/`, school)\r\n      .then(res => {\r\n        const school = res.data;\r\n        dispatch(updateSchoolSuccess(school));\r\n      })\r\n      .catch(err => {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch(updateSchoolFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nconst getSchoolDetailStart = () => {\r\n  return {\r\n    type: actionTypes.GET_SCHOOL_DETAIL_START\r\n  };\r\n};\r\n\r\nconst getSchoolDetailSuccess = school => {\r\n  return {\r\n    type: actionTypes.GET_SCHOOL_DETAIL_SUCCESS,\r\n    school\r\n  };\r\n};\r\n\r\nconst getSchoolDetailFail = error => {\r\n  return {\r\n    type: actionTypes.GET_SCHOOL_DETAIL_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const getSchoolDetail = (token, id) => {\r\n  return dispatch => {\r\n    dispatch(getSchoolDetailStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/schools/${id}/`)\r\n      .then(res => {\r\n        const school = res.data;\r\n        dispatch(getSchoolDetailSuccess(school));\r\n      })\r\n      .catch(err => {\r\n        dispatch(getSchoolDetailFail());\r\n      });\r\n  };\r\n};\r\n\r\nexport const createSchoolStart = () => {\r\n  return {\r\n    type: actionTypes.CREATE_SCHOOL_START\r\n  };\r\n};\r\n\r\nexport const createSchoolSuccess = school => {\r\n  return {\r\n    type: actionTypes.CREATE_SCHOOL_SUCCESS,\r\n    school\r\n  };\r\n};\r\n\r\nexport const createSchoolFail = error => {\r\n  return {\r\n    type: actionTypes.CREATE_SCHOOL_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\n\r\nexport const createSchool = (token, school) => {\r\n  return dispatch => {\r\n    dispatch(createSchoolStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`\r\n    };\r\n    axios\r\n      .post(`http://127.0.0.1:8000/schools/`, school)\r\n      .then(res => {\r\n        dispatch(createSchoolSuccess(res.data));\r\n      })\r\n      .catch(err => {\r\n        dispatch(returnErrors(err.response.data, err.response.status));\r\n        dispatch(createSchoolFail());\r\n      });\r\n  };\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Row, Col, Input, Button, Icon, DatePicker, Select, Upload, Modal } from 'antd';\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\n\r\nimport { teacherForm } from \"../../../actions/users\";\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nclass TeachersForm extends Component {\r\n\r\n  // state = {\r\n  //   previewVisible: false,\r\n  //   previewImage: '',\r\n  //   fileList: {},\r\n  // };\r\n\r\n  // handleSubmit = e => {\r\n  //   e.preventDefault();\r\n  //   this.props.form.validateFields((err, values) => {\r\n  //     if (!err) {\r\n  //       console.log(\"Received values of form: \", values);\r\n  //       // const teacher = [];\r\n  //       // for (let i = 0; i < values.questions.length; i += 1) {\r\n  //       //   teacher.push({\r\n  //       //     title: values.question[i],\r\n  //       //     choices: values.questions[i].choices.filter(el => el !== null),\r\n  //       //     answer: values.answers[i]\r\n  //       //   });\r\n  //       // }\r\n  //       // const asnt = {\r\n  //       //   teacher: this.props.username,\r\n  //       //   title: values.title,\r\n  //       //   questions\r\n  //       // };\r\n  //       const teacher = {\r\n  //         user:             this.props.username,\r\n  //         image:            values.image,\r\n  //         date_of_birth:    values.date_of_birth,\r\n  //         gender:           values.gender,\r\n  //         street:           values.street,\r\n  //         city:             values.city,\r\n  //         state:            values.state,\r\n  //         country:          values.country,\r\n  //         zip_code:         values.zip_code,\r\n  //         years_of_experience:    values.years_of_experience,\r\n  //         academic_qualification: values.academic_qualification,\r\n  //         phone:                  values.phone,\r\n  //         emergency_contact1:     values.emergency_contact1,\r\n  //         emergency_contact2:     values.emergency_contact2,\r\n  //         blood_group:            values.blood_group,\r\n  //       }\r\n  //       this.props.teacherForm(this.props.token, teacher);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  normFile = e => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  \r\n\r\n\r\n  // getBase64 = (file) => {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     const reader = new FileReader();\r\n  //     reader.readAsDataURL(file);\r\n  //     reader.onload = () => resolve(reader.result);\r\n  //     reader.onerror = error => reject(error);\r\n  //   });\r\n  // }\r\n  \r\n  // handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // handlePreview = file => {\r\n  //   if (!file.url && !file.preview) {\r\n  //     file.preview = getBase64(file.originFileObj);\r\n  //   }\r\n\r\n  //   this.setState({\r\n  //     previewImage: file.url || file.preview,\r\n  //     previewVisible: true,\r\n  //   });\r\n  // };\r\n\r\n  // handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    // const { previewVisible, previewImage, fileList } = this.state;\r\n    // const uploadButton = (\r\n    //   <div>\r\n    //     <PlusOutlined />\r\n    //     <div className=\"ant-upload-text\">Upload</div>\r\n    //   </div>\r\n    // );\r\n\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <Row>\r\n            <Col span={4} >\r\n              <Form.Item\r\n                name=\"upload\"\r\n                label=\"Image\"\r\n                // valuePropName=\"fileList\"\r\n                // getValueFromEvent={this.normFile}\r\n                // extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n                // label={`Image`}\r\n              >\r\n                {getFieldDecorator(`image`, {\r\n                    rules: [\r\n                      {\r\n                        // required: true,\r\n                        message: 'image is required!',\r\n                      },\r\n                    ],\r\n                  })\r\n                  (\r\n                    <Upload name=\"logo\" action=\"\" listType=\"picture\">\r\n                      <Button>\r\n                        <UploadOutlined /> Click to upload\r\n                      </Button>\r\n                    </Upload>\r\n                  // <div>\r\n                  //   <Upload\r\n                  //     listType=\"picture-card\"\r\n                  //     fileList={fileList}\r\n                  //     onPreview={this.handlePreview}\r\n                  //     onChange={this.handleChange}\r\n                  //   >\r\n                  //     {fileList.length >= 2 ? null : uploadButton}\r\n                  //   </Upload>\r\n                  //   <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                  //     <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                  //   </Modal>\r\n                  // </div> \r\n                )\r\n              }\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={24}>\r\n            {/* <Col span={8} >\r\n              <Form.Item label={`First Name`}>\r\n                {getFieldDecorator(`firstName`, {\r\n                  initialValue: this.props.first_name,\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'First Name is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Input placeholder=\"First Name\"  disabled />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Last Name`}>\r\n                {getFieldDecorator(`lastName`, {\r\n                  initialValue: this.props.last_name,\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Last is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                    <Input placeholder=\"Last Name\" disabled  />\r\n                )}\r\n              </Form.Item>\r\n            </Col> */}\r\n            <Col span={8} >\r\n              <Form.Item label={`Gender`}>\r\n                {getFieldDecorator(`gender`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Gender is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Select placeholder=\"Select your gender\">\r\n                    <Option value=\"male\">Male</Option>\r\n                    <Option value=\"female\">Female</Option>\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Date of Birth`}>\r\n                {getFieldDecorator(`date_of_birth`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Date of birth is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                    <DatePicker />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Country`}>\r\n                {getFieldDecorator(`country`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Country is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Select placeholder=\"Select your country\">\r\n                    <Option value=\"usa\">USA</Option>\r\n                    <Option value=\"nigeria\">Nigeria</Option>\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`State`}>\r\n                {getFieldDecorator(`state`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'State is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Select placeholder=\"Select your state\">\r\n                    <Option value=\"washinton\">Washinton</Option>\r\n                    <Option value=\"imo\">Imo</Option>\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`City`}>\r\n                {getFieldDecorator(`city`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'city is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                    <Input placeholder=\"City\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Street`}>\r\n                {getFieldDecorator(`street`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'street is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                    <Input placeholder=\"Street\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Zip Code`}>\r\n                {getFieldDecorator(`zip_code`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Zip code is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                    <Input placeholder=\"Zip code\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Years of Experience (Optional)`}>\r\n                {getFieldDecorator(`years_of_experience`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'experience is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                    <Input placeholder=\"Years of Experience\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Academic Qualification`}>\r\n                {getFieldDecorator(`academic_qualification`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Academic Qualification is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Input placeholder=\"Academic Qualification\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Phone`}>\r\n                {getFieldDecorator(`phone`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Phone is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Input placeholder=\"Phone\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Emergency Contact1`}>\r\n                {getFieldDecorator(`emergency_contact1`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Emergency Contact1 is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Input placeholder=\"Emergency Contact1\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Emergency Contact2`}>\r\n                {getFieldDecorator(`emergency_contact2`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Emergency Contact2 is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Input placeholder=\"Emergency Contact2\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} >\r\n              <Form.Item label={`Blood Group`}>\r\n                {getFieldDecorator(`blood_group`, {\r\n                  rules: [\r\n                    {\r\n                      // required: true,\r\n                      message: 'Blood Group is required!',\r\n                    },\r\n                  ],\r\n                })\r\n                  (\r\n                  <Input placeholder=\"Blood Group\" />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={24} style={{ textAlign: 'right' }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Save\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\r\n                Clear\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// const WrappedTeachersForm = Form.create()(TeachersForm)\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     token: state.auth.token,\r\n//     username: state.auth.username,\r\n//     first_name: state.auth.first_name,\r\n//     last_name: state.auth.last_name,\r\n//     // userId: state.auth.userId,\r\n//     loading: state.teacherForm.loading\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     teacherForm: (token, user, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group) =>\r\n//       dispatch(teacherForm(token, user, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group))\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     teacherForm: (token, teacher) =>\r\n//       dispatch(teacherForm(token, teacher))\r\n//   };\r\n// };\r\n\r\n// export default connect(\r\n//   mapStateToProps,\r\n//   mapDispatchToProps\r\n// )(WrappedTeachersForm)\r\n\r\nexport default TeachersForm","import React from \"react\";\r\nimport { Form, Input, Icon, Button, Select, Steps, message, Upload, Modal, Row, Col, DatePicker } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n// import { NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/auth\";\r\nimport { getSchools } from \"../../actions/schools\";\r\nimport TeachersForm from \"./forms/TeachersForm\"\r\n\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { Step } = Steps;\r\n\r\nclass TeacherRegister extends React.Component {\r\n  // state = {\r\n    // confirmDirty: false,\r\n    // is_teacher: false,\r\n    // is_school_admin: false/\r\n  // };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      confirmDirty: false,\r\n      current: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getSchools(this.props.token);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getSchools(newProps.token);\r\n      }\r\n    }\r\n  }\r\n\r\n  next() {\r\n    const current = this.state.current + 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        let is_student = false;\r\n        let is_teacher = false;\r\n        let is_school_admin = false;\r\n        let is_system_admin = false;\r\n        if (values.userType === \"teacher\") {\r\n          is_teacher = true;\r\n          is_school_admin = false;\r\n        }\r\n        else if (values.userType === \"schooladmin\") {\r\n          is_school_admin = true;\r\n          is_teacher = false;\r\n        } \r\n        // if (values.userType === \"teacher\") is_teacher = true;\r\n        // {\r\n        //   // is_teacher = true;\r\n        //   this.setState({ is_teacher: true })\r\n        // }\r\n        // const teacher = {\r\n        //   first_name:     values.first_name,\r\n        //   last_name:      values.last_name,\r\n        //   username:       values.username,\r\n        //   email:          values.email,\r\n        //   password1:      values.password1,\r\n        //   password2:      values.password2,\r\n        //   is_student:     is_student,\r\n        //   is_teacher:     is_teacher,\r\n        //   is_school_admin: is_school_admin,\r\n        //   is_system_admin: is_system_admin,\r\n        //   image:            values.image,\r\n        //   date_of_birth:    values.date_of_birth,\r\n        //   gender:           values.gender,\r\n        //   street:           values.street,\r\n        //   city:             values.city,\r\n        //   state:            values.state,\r\n        //   country:          values.country,\r\n        //   zip_code:         values.zip_code,\r\n        //   years_of_experience:    values.years_of_experience,\r\n        //   academic_qualification: values.academic_qualification,\r\n        //   phone:                  values.phone,\r\n        //   emergency_contact1:     values.emergency_contact1,\r\n        //   emergency_contact2:     values.emergency_contact2,\r\n        //   blood_group:            values.blood_group,\r\n        // }\r\n\r\n        this.props.onAuth(\r\n          // teacher\r\n          values.first_name,\r\n          values.last_name,\r\n          values.username,\r\n          values.email,\r\n          values.password1,\r\n          values.password2,\r\n          values.school,\r\n          is_student,\r\n          is_teacher,\r\n          is_school_admin,\r\n          is_system_admin,\r\n          // values.image,\r\n          // values.date_of_birth,\r\n          // values.gender,\r\n          // values.street,\r\n          // values.city,\r\n          // values.state,\r\n          // values.country,\r\n          // values.zip_code,\r\n          // values.years_of_experience,\r\n          // values.academic_qualification,\r\n          // values.phone,\r\n          // values.emergency_contact1,\r\n          // values.emergency_contact2,\r\n          // values.blood_group,\r\n        );\r\n        // this.props.onAuth(\r\n        //   this.props.token,\r\n        //   teacher\r\n        // );\r\n        // this.props.onAuth(\r\n        //   values.firstName,\r\n        //   values.lastName,\r\n        //   values.userName,\r\n        //   values.email,\r\n        //   values.password,\r\n        //   values.confirm,\r\n        //   is_student,\r\n        //   is_teacher,\r\n        //   is_school_admin\r\n\r\n        // );\r\n        this.props.history.push(\"/teacher/all-teachers\");\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue(\"password1\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"password2\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  normFile = e => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.props.form.resetFields();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { is_system_admin, is_school_admin } = this.props.isRole;\r\n\r\n    // const steps = [\r\n    //   {\r\n    //     title: 'First',\r\n    //     content: 'First-content',\r\n    //   },\r\n    //   {\r\n    //     title: 'Second',\r\n    //     content: 'Second-content',\r\n    //   },\r\n    //   {\r\n    //     title: 'Last',\r\n    //     content: 'Last-content',\r\n    //   },\r\n    // ];\r\n\r\n    const { current } = this.state;\r\n\r\n    let schools = this.props.schools.map((v, k) => {\r\n        return (\r\n          <Option key={v.id} value={v.id}>{v.name}</Option>\r\n        )\r\n      })\r\n\r\n\r\n    return (\r\n      <div>\r\n        {/* <div>\r\n          <Steps current={current}>\r\n            {steps.map(item => (\r\n              <Step key={item.title} title={item.title} />\r\n            ))}\r\n          </Steps>\r\n          <div className=\"steps-content\">{steps[current].content}</div>\r\n          <div className=\"steps-action\">\r\n            {current < steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={() => this.next()}>\r\n                Next\r\n              </Button>\r\n            )}\r\n            {current === steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n                Done\r\n              </Button>\r\n            )}\r\n            {current > 0 && (\r\n              <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                Previous\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div> */}\r\n        {\r\n          is_system_admin || is_school_admin ?\r\n            (\r\n              <div>\r\n                  <Form onSubmit={this.handleSubmit}>\r\n                    <div className=\"col-md-6 m-auto card card-body mt-5\">\r\n                    <h2>Teacher Registration</h2>\r\n                    <FormItem>\r\n                      {getFieldDecorator(\"first_name\", {\r\n                        rules: [{ required: true, message: \"Please input your first name!\" }]\r\n                      })(\r\n                        <Input\r\n                          prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                          placeholder=\"First Name\"\r\n                        />\r\n                      )}\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      {getFieldDecorator(\"last_name\", {\r\n                        rules: [{ required: true, message: \"Please input your last name!\" }]\r\n                      })(\r\n                        <Input\r\n                          prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                          placeholder=\"Last Name\"\r\n                        />\r\n                      )}\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      {getFieldDecorator(\"username\", {\r\n                        rules: [{ required: true, message: \"Please input your username!\" }]\r\n                      })(\r\n                        <Input\r\n                          prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                          placeholder=\"Username\"\r\n                        />\r\n                      )}\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      {getFieldDecorator(\"email\", {\r\n                        rules: [\r\n                          {\r\n                            type: \"email\",\r\n                            message: \"The input is not valid E-mail!\"\r\n                          },\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your E-mail!\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Input\r\n                          prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                          placeholder=\"Email\"\r\n                        />\r\n                      )}\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      {getFieldDecorator(\"password1\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Please input your password!\"\r\n                          },\r\n                          {\r\n                            validator: this.validateToNextPassword\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Input\r\n                          prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                        />\r\n                      )}\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      {getFieldDecorator(\"password2\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Please confirm your password!\"\r\n                          },\r\n                          {\r\n                            validator: this.compareToFirstPassword\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Input\r\n                          prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          onBlur={this.handleConfirmBlur}\r\n                        />\r\n                      )}\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      { getFieldDecorator(\"school\", {\r\n                          rules: [\r\n                            {\r\n                              required: true,\r\n                              message: \"Please select a user!\"\r\n                            }\r\n                          ]\r\n                        })(\r\n                          <Select placeholder=\"Select a school\">\r\n                            {schools}\r\n                          </Select>\r\n                          )\r\n                      }\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      { is_school_admin && !is_system_admin ?\r\n                        (getFieldDecorator(\"userType\", {\r\n                        initialValue: \"teacher\",\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Please select a user!\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select placeholder=\"Select a user type\">\r\n                          <Option value=\"teacher\">Teacher</Option>\r\n                        </Select>\r\n                        )) : \r\n                        (getFieldDecorator(\"userType\", {\r\n                          rules: [\r\n                            {\r\n                              required: true,\r\n                              message: \"Please select a user!\"\r\n                            }\r\n                          ]\r\n                        })(\r\n                          <Select placeholder=\"Select a user type\">\r\n                            <Option value=\"schooladmin\">School Admin</Option>\r\n                            <Option value=\"teacher\">Teacher</Option>\r\n                          </Select>\r\n                          ))\r\n                      }\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{ marginRight: \"10px\" }}\r\n                      >\r\n                        Register Teacher\r\n                      </Button>\r\n                      {/* Or\r\n                      <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\r\n                        login\r\n                      </NavLink> */}\r\n                    </FormItem>\r\n                    \r\n                   </div> \r\n                  {/* <TeachersForm {...this.props} /> */}\r\n                  \r\n                  </Form>\r\n                  \r\n                \r\n                \r\n              </div>\r\n            )\r\n            :\r\n            null\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedTeacherRegister = Form.create()(TeacherRegister);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    isRole: state.auth,\r\n    loading: state.auth.loading,\r\n    schools: state.schools.schools,\r\n    error: state.auth.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // onAuth: (teacher) =>\r\n    //   dispatch(\r\n    //     actions.authTeacherRegister(teacher)\r\n    //   )\r\n    // onAuth: (first_name, last_name, username, email, password1, password2, is_student, is_teacher, is_school_admin, is_system_admin, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group) =>\r\n    //   dispatch(\r\n    //     actions.authTeacherRegister(first_name, last_name, username, email, password1, password2, is_student, is_teacher, is_school_admin, is_system_admin, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group)\r\n    //   ),\r\n    getSchools: token => dispatch(getSchools(token)),\r\n    onAuth: (first_name, last_name, username, email, password1, password2, school, is_student, is_teacher, is_school_admin, is_system_admin) =>\r\n      dispatch(\r\n        actions.authRegister(first_name, last_name, username, email, password1, password2, school, is_student, is_teacher, is_school_admin, is_system_admin)\r\n      )\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedTeacherRegister);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// import { updateSchoolImage, getSchoolDetail } from '../../../actions/schools'\r\n// import reqwest from 'reqwest';\r\nimport axios from 'axios';\r\n\r\nclass TeacherImageUpload extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\n  \r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    // fileList.forEach(file => {\r\n      formData.append('image', fileList[0], fileList[0].name);\r\n      // formData.append('logo', file, file.name);\r\n    // });\r\n\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n\r\n\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      // \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${this.props.token}`\r\n    };\r\n    axios\r\n      .put(`http://127.0.0.1:8000/teachers-image/${this.props.currentTeacher.teachers[0].id}/`, formData)\r\n      .then(res => {\r\n        this.setState({\r\n          fileList: [],\r\n          uploading: false,\r\n        });\r\n        message.success('upload successfully.');\r\n        console.log(res)\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          uploading: false,\r\n        });\r\n        message.error('sorry error has occured.', err);\r\n        console.log(err)\r\n      });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      multiple: false,\r\n      showUploadList: {\r\n        showDownloadIcon: false\r\n      },\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          // const index = state.fileList.indexOf(file);\r\n          // const newFileList = state.fileList.slice();\r\n          // newFileList.splice(index, 1);\r\n          return {\r\n            fileList: [],\r\n            // fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [file],\r\n          // fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Upload {...props} accept=\".jpg,.png\" >\r\n          <Button>\r\n            <UploadOutlined /> Select File\r\n          </Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={this.handleUpload}\r\n          disabled={fileList.length === 0}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// const WrappedSchoolImageUpload = Form.create()(SchoolImageUpload);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    username: state.auth.username,\r\n    currentTeacher: state.users.currentUser,\r\n    loading: state.users.loading,\r\n    error: state.users.error\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     updateSchoolImage: (token, id, school) => dispatch(updateSchoolImage(token, id, school)),\r\n//     getSchoolDetail: (token, id) => dispatch(getSchoolDetail(token, id)),\r\n//   };\r\n// };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  // mapDispatchToProps\r\n)(TeacherImageUpload);\r\n// export default SchoolImageUpload","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Row, Col, Input, Button, Icon, DatePicker, Select, Upload, Modal } from 'antd';\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport { updateUser, getUserDetail } from \"../../actions/users\";\r\nimport TeacherImageUpload from './forms/TeacherImageUpload';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nclass TeacherUpdate extends Component {\r\n\r\n  // state = {\r\n  //   previewVisible: false,\r\n  //   previewImage: '',\r\n  //   fileList: {},\r\n  // };\r\n  state = {\r\n    confirmDirty: false,\r\n    // image: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getUserDetail(this.props.token, this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getUserDetail(newProps.token, this.props.match.params.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        let is_student = false;\r\n        let is_teacher = false;\r\n        let is_school_admin = false;\r\n        let is_system_admin = false;\r\n        if (values.userType === \"teacher\") {\r\n          is_teacher = true;\r\n          is_school_admin = false;\r\n        }\r\n        else if (values.userType === \"schooladmin\") {\r\n          is_school_admin = true;\r\n          is_teacher = false;\r\n        } \r\n        const teachers = [];\r\n        // for (let i = 0; i < values.questions.length; i += 1) {\r\n          teachers.push({\r\n            image:            values.image,\r\n            date_of_birth:    values.date_of_birth,\r\n            gender:           values.gender,\r\n            street:           values.street,\r\n            city:             values.city,\r\n            state:            values.state,\r\n            country:          values.country,\r\n            zip_code:         values.zip_code,\r\n            years_of_experience:    values.years_of_experience,\r\n            academic_qualification: values.academic_qualification,\r\n            phone:                  values.phone,\r\n            emergency_contact1:     values.emergency_contact1,\r\n            emergency_contact2:     values.emergency_contact2,\r\n            blood_group:            values.blood_group,\r\n          });\r\n        // }\r\n      \r\n        const user = {\r\n          first_name:     values.first_name,\r\n          last_name:      values.last_name,\r\n          username:       values.username,\r\n          email:          values.email,\r\n          // password1:      values.password1,\r\n          // password2:      values.password2,\r\n          is_student:     is_student,\r\n          is_teacher:     is_teacher,\r\n          is_school_admin: is_school_admin,\r\n          is_system_admin: is_system_admin,\r\n          teachers,\r\n          \r\n        }\r\n        this.props.updateUser(this.props.token, this.props.match.params.id, user);\r\n      }\r\n    });\r\n  };\r\n\r\n  normFile = e => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  \r\n\r\n\r\n  // getBase64 = (file) => {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     const reader = new FileReader();\r\n  //     reader.readAsDataURL(file);\r\n  //     reader.onload = () => resolve(reader.result);\r\n  //     reader.onerror = error => reject(error);\r\n  //   });\r\n  // }\r\n  \r\n  // handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // handlePreview = file => {\r\n  //   if (!file.url && !file.preview) {\r\n  //     file.preview = getBase64(file.originFileObj);\r\n  //   }\r\n\r\n  //   this.setState({\r\n  //     previewImage: file.url || file.preview,\r\n  //     previewVisible: true,\r\n  //   });\r\n  // };\r\n\r\n  // handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { currentTeacher } = this.props;\r\n    const { first_name, last_name, username, email, is_teacher, is_school_admin, is_system_admin, school, teachers } = currentTeacher;\r\n\r\n    let is_role;\r\n\r\n    if (is_school_admin) is_role = \"schooladmin\";\r\n    else if (is_teacher) is_role = \"teacher\";\r\n\r\n\r\n    return (\r\n      <div>\r\n        {\r\n        // (is_school_admin == true && school == this.props.schoolId) || (is_teacher == true && school == this.props.schoolId) ?\r\n          this.props.is_system_admin || this.props.is_school_admin || (this.props.is_school_admin  && this.props.userId == this.props.match.params.id) || (this.props.is_teacher && this.props.userId == this.props.match.params.id) ?\r\n            Object.keys(currentTeacher).length > 0 ? \r\n                (\r\n                <div>\r\n                  <TeacherImageUpload />\r\n                  <br />\r\n                  <Form onSubmit={this.handleSubmit} >\r\n                    {/* <Row>\r\n                      <Col span={4} >\r\n                        <Form.Item\r\n                          name=\"image\"\r\n                          label=\"Image\"\r\n                          // valuePropName=\"fileList\"\r\n                          // getValueFromEvent={this.normFile}\r\n                          // extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n                          // label={`Image`}\r\n                        >\r\n                          <Upload>\r\n                            <Button>\r\n                              <UploadOutlined /> Select Image\r\n                            </Button>\r\n                          </Upload>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row> */}\r\n                    <Row gutter={24}>\r\n                      <Col span={8} >\r\n                        <Form.Item label={`First Name`}>\r\n                          {getFieldDecorator(\"first_name\", {\r\n                            initialValue: first_name,\r\n                            rules: [{ message: \"Please input your first name!\" }]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"First Name\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={8} >\r\n                        <Form.Item label={`Last Name`}>\r\n                          {getFieldDecorator(\"last_name\", {\r\n                            initialValue: last_name,\r\n                            rules: [{required: true, message: \"Please input your last name!\" }]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"Last Name\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={8} >\r\n                        <Form.Item label={`Username`}>\r\n                          {getFieldDecorator(\"username\", {\r\n                            initialValue: username,\r\n                            rules: [{required: true, message: \"Please input your username!\" }]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"Username\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={8} >\r\n                        <Form.Item label={`Email`}>\r\n                          {getFieldDecorator(\"email\", {\r\n                            initialValue: email,\r\n                            rules: [\r\n                              {\r\n                                type: \"email\",\r\n                                message: \"The input is not valid E-mail!\"\r\n                              },\r\n                              {\r\n                                required: true,\r\n                                message: \"Please input your E-mail!\"\r\n                              }\r\n                            ]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"Email\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n                      \r\n                      {/* <Col span={8} >\r\n                        <FormItem label={`School`}>\r\n                          { getFieldDecorator(\"school\", {\r\n                              rules: [\r\n                                {\r\n                                  message: \"Please select a user!\"\r\n                                }\r\n                              ]\r\n                            })(\r\n                              <Select placeholder=\"Select a school\">\r\n                                {schools}\r\n                              </Select>\r\n                              )\r\n                          }\r\n                        </FormItem>\r\n                      </Col> */}\r\n                    {!this.props.is_teacher ?\r\n                      (\r\n                        <Col span={8} >\r\n                          <Form.Item label={`Select User`}>\r\n                            { this.props.is_school_admin && !this.props.is_system_admin ?\r\n                              (getFieldDecorator(\"userType\", {\r\n                              initialValue: is_role,\r\n                              rules: [\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Please select a user!\"\r\n                                }\r\n                              ]\r\n                            })(\r\n                              <Select placeholder=\"Select a user type\">\r\n                                <Option value=\"teacher\">Teacher</Option>\r\n                              </Select>\r\n                              )) : \r\n                              (getFieldDecorator(\"userType\", {\r\n                                initialValue: is_role,\r\n                                rules: [\r\n                                  {\r\n                                    required: true,\r\n                                    message: \"Please select a user!\"\r\n                                  }\r\n                                ]\r\n                              })(\r\n                                <Select placeholder=\"Select a user type\">\r\n                                  <Option value=\"schooladmin\">School Admin</Option>\r\n                                  <Option value=\"teacher\">Teacher</Option>\r\n                                </Select>\r\n                                ))\r\n                            }\r\n                          </Form.Item>\r\n                        </Col>\r\n                      )\r\n                      :\r\n                      null\r\n                    }\r\n\r\n                    {teachers.map((v, k) => {\r\n                      return (\r\n                        <div key={k}>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Gender`}>\r\n                              {getFieldDecorator(`gender`, {\r\n                                initialValue: v.gender,\r\n                              })\r\n                                (\r\n                                <Select placeholder=\"Select your gender\">\r\n                                  <Option value=\"male\">Male</Option>\r\n                                  <Option value=\"female\">Female</Option>\r\n                                </Select>\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Date of Birth`}>\r\n                              {getFieldDecorator(`date_of_birth`, {\r\n                                // defaultValue: moment(v.date_of_birth, 'DD-MM-YYYY'),\r\n                                defaultValue: moment(v.date_of_birth, 'YYYY-MM-DD'),\r\n                              })\r\n                                (\r\n                                  <DatePicker />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Country`}>\r\n                              {getFieldDecorator(`country`, {\r\n                                initialValue: v.country,\r\n                              })\r\n                                (\r\n                                <Select placeholder=\"Select your country\">\r\n                                  <Option value=\"usa\">USA</Option>\r\n                                  <Option value=\"nigeria\">Nigeria</Option>\r\n                                </Select>\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`State`}>\r\n                              {getFieldDecorator(`state`, {\r\n                                initialValue: v.state,\r\n                              })\r\n                                (\r\n                                <Select placeholder=\"Select your state\">\r\n                                  <Option value=\"washinton\">Washinton</Option>\r\n                                  <Option value=\"imo\">Imo</Option>\r\n                                </Select>\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`City`}>\r\n                              {getFieldDecorator(`city`, {\r\n                                initialValue: v.city,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"City\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Street`}>\r\n                              {getFieldDecorator(`street`, {\r\n                                initialValue: v.street,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"Street\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Zip Code`}>\r\n                              {getFieldDecorator(`zip_code`, {\r\n                                initialValue: v.zip_code,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"Zip code\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Years of Experience (Optional)`}>\r\n                              {getFieldDecorator(`years_of_experience`, {\r\n                                initialValue: v.years_of_experience,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"Years of Experience\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Academic Qualification`}>\r\n                              {getFieldDecorator(`academic_qualification`, {\r\n                                initialValue: v.academic_qualification,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Academic Qualification\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Phone`}>\r\n                              {getFieldDecorator(`phone`, {\r\n                                initialValue: v.phone,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Phone\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Emergency Contact1`}>\r\n                              {getFieldDecorator(`emergency_contact1`, {\r\n                                initialValue: v.emergency_contact1,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Emergency Contact1\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Emergency Contact2`}>\r\n                              {getFieldDecorator(`emergency_contact2`, {\r\n                                initialValue: v.emergency_contact2,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Emergency Contact2\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Blood Group`}>\r\n                              {getFieldDecorator(`blood_group`, {\r\n                                initialValue: v.blood_group,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Blood Group\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                    </Row>\r\n                    <Row>\r\n                      <Col span={24} style={{ textAlign: 'right' }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              )\r\n              :\r\n              null\r\n            :\r\n            null\r\n            // :\r\n            // null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst WrappedTeacherUpdate = Form.create()(TeacherUpdate)\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    schoolId: state.auth.schoolId,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    is_school_admin: state.auth.is_school_admin,\r\n    is_teacher: state.auth.is_teacher,\r\n    username: state.auth.username,\r\n    currentTeacher: state.users.currentUser,\r\n    loading: state.users.loading,\r\n    error: state.users.error\r\n  };\r\n};\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     teacherForm: (token, user, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group) =>\r\n//       dispatch(teacherForm(token, user, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group))\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateUser: (token, id, teacher) => dispatch(updateUser(token, id, teacher)),\r\n    getUserDetail: (token, id) => dispatch(getUserDetail(token, id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedTeacherUpdate)\r\n\r\n// export default TeacherUpdate","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Grid, Skeleton, Card, Avatar, Modal, Button } from \"antd\";\r\nimport { MessageOutlined, LikeOutlined, StarOutlined, EyeOutlined, DeleteOutlined, EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nimport * as actions from \"../../actions/users\";\r\nimport TeacherUpdate from './TeacherUpdate';\r\nimport Hoc from \"../../hoc/hoc\";\r\n\r\nconst { Meta } = Card;\r\n\r\nclass TeacherList extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getTeachers(this.props.token);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getTeachers(newProps.token);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.props.deleteTeacher(this.props.token, id)\r\n  }\r\n\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <Hoc>\r\n        {item.is_school_admin || item.is_teacher ?\r\n        // {(item.is_school_admin && item.school == this.props.schoolId) || (item.is_teacher && item.school == this.props.schoolId) ?\r\n          (\r\n\r\n             <List.Item\r\n               key={item.id}\r\n             >\r\n               <Card \r\n                 hoverable\r\n                 // title={item.name}\r\n                //  style={{ width: 200 }}\r\n                //  cover={\r\n                //    <img\r\n                //      alt=\"Teacher\"\r\n                //      src=\"/static/assets/img/figure/teacher.jpg\"\r\n                //      width=\"100%\"\r\n                //      height=\"70\"\r\n                //    />\r\n                //  }\r\n                //  cover={\r\n                //    <img\r\n                //      alt=\"example\"\r\n                //      src={item.image}\r\n                //    />\r\n                //  }\r\n                cover={\r\n                  item.teachers.map((v, k) => { \r\n                    if (v.image !== null) {\r\n                      return (\r\n                        <img\r\n                          style={{ height: 100 }}\r\n                          key={k}\r\n                          alt={item.username}\r\n                          src={v.image}\r\n                        />\r\n                      )\r\n                    }\r\n                    else {\r\n                     return (\r\n                        <img style={{ height: 100 }} key={k} src=\"/static/assets/img/ECOLOGO.jpg\" className=\"media-img-auto\" alt={item.username} />\r\n                      \r\n                      )\r\n                    }\r\n                    })\r\n                  }\r\n                 actions={[\r\n                   // <SettingOutlined key=\"setting\" />,\r\n                   <Link to={`/teacher/${item.id}`}><EyeOutlined key=\"view\" /></Link>,\r\n                   <Link to={`/teacher/${item.id}/update/`}><EditOutlined key=\"edit\" /></Link>,\r\n                   <DeleteOutlined key=\"delete\" onClick={() => this.handleDelete(item.id)} />,\r\n                 ]}\r\n               >\r\n                 <Meta\r\n                   // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                   title={[item.first_name, \" \", item.last_name]}\r\n                   // description=\"This is the description\"\r\n                 />\r\n               </Card>\r\n               \r\n             </List.Item>\r\n          )\r\n          :\r\n          null\r\n        }\r\n      </Hoc>\r\n    );\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Hoc>\r\n        {this.props.is_system_admin || this.props.is_school_admin ?\r\n            this.props.loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n              <div>\r\n                <h3 style={{ margin: \"16px 0\" }}>Teacher List</h3>\r\n                <List\r\n                  grid={{ \r\n                    gutter: 16,\r\n                    xs: 1,\r\n                    sm: 2,\r\n                    md: 2,\r\n                    lg: 4,\r\n                    xl: 4,\r\n                    xxl: 3, \r\n                    // column: 4,\r\n                  }}\r\n                  pagination={{\r\n                    onChange: page => {\r\n                      console.log(page);\r\n                    },\r\n                    pageSize: 6,\r\n                  }}\r\n                  bordered\r\n                  dataSource={this.props.teachers}\r\n                  renderItem={item => this.renderItem(item)}\r\n                  />\r\n              </div>\r\n            )\r\n           : null\r\n        }\r\n      </Hoc>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    is_school_admin: state.auth.is_school_admin,\r\n    is_teacher: state.auth.is_teacher,\r\n    schoolId: state.auth.schoolId,\r\n    teachers: state.users.users,\r\n    loading: state.users.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteTeacher: (token, id) => dispatch(actions.deleteUser(token, id)),\r\n    getTeachers: token => dispatch(actions.getUsers(token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TeacherList);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Skeleton, Card, Modal, Button, Avatar } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { getUserDetail, deleteUser } from '../../actions/users';\r\nimport TeacherUpdate from './TeacherUpdate';\r\nconst { confirm } = Modal;\r\nconst { Meta } = Card;\r\n\r\nclass TeacherDetails extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getTeacherDetail(this.props.token, this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getTeacherDetail(newProps.token, this.props.match.params.id);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  showConfirmDelete = () => {\r\n    // e.preventDefault();\r\n    confirm({\r\n      title: 'Do you want to delete these school?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'When clicked the OK button, this dialog will be closed after 1 second',\r\n      onOk: () => {\r\n        this.props.deleteTeacher(this.props.token, this.props.match.params.id);\r\n        this.props.history.push(\"/teacher/all-teachers\")\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentTeacher } = this.props;\r\n    const { id, first_name, last_name, username, email, is_school_admin, is_teacher, school, teachers } = currentTeacher;\r\n    let teacher = null;\r\n    try {\r\n      teacher = teachers.map((v, k) => {\r\n        return (\r\n          <div key={k}>\r\n            <p><strong>Street: </strong>{v.street}</p>\r\n          </div>\r\n        )\r\n      });  \r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n        // (is_school_admin == true && school == this.props.schoolId) || (is_teacher == true && school == this.props.schoolId) ?\r\n        // {(is_school_admin == true && school == this.props.schoolId) || (is_teacher == true && school == this.props.schoolId) ?\r\n          this.props.is_system_admin || this.props.is_school_admin || (this.props.is_school_admin && this.props.userId == this.props.match.params.id) || (this.props.is_teacher && this.props.userId == this.props.match.params.id) && Object.keys(currentTeacher).length > 0 ? (\r\n          <div className=\"m-auto mt-5\">\r\n            {this.props.loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n                <Card\r\n                  // title={[first_name, \" \", last_name]}\r\n                  extra={\r\n                    <div>\r\n                      <Link to={`/teacher/${id}/update`}><Button type=\"primary\">\r\n                        Edit\r\n                      </Button></Link>\r\n                      <Button type=\"danger\"  onClick={this.showConfirmDelete}>\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  }\r\n                  style={{ width: \"100%\" }}>\r\n                  <Meta\r\n                      avatar={<Avatar src=\"/static/assets/img/figure/teacher.jpg\" />}\r\n                      title={[first_name, \" \", last_name]}\r\n                    // title={[item.first_name, \" \", item.last_name]}\r\n                    // description=\"This is the description\"\r\n                  />\r\n                  <br />\r\n                {/* <p><strong>First Name: </strong>{first_name}</p>\r\n                <p><strong>Last Name: </strong>{last_name}</p> */}\r\n                <p><strong>Username: </strong>{username}</p>\r\n                <p><strong>Email: </strong>{email}</p>\r\n                {teacher}\r\n              </Card>\r\n            )}\r\n          </div>\r\n          ) : null\r\n                // : null\r\n        }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    is_school_admin: state.auth.is_school_admin,\r\n    is_teacher: state.auth.is_teacher,\r\n    schoolId: state.auth.schoolId,\r\n    currentTeacher: state.users.currentUser,\r\n    loading: state.users.loading,\r\n    username: state.auth.username\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteTeacher: (token, id) => dispatch(deleteUser(token, id)),\r\n    getTeacherDetail: (token, id) => dispatch(getUserDetail(token, id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TeacherDetails);\r\n","import React from \"react\";\r\nimport { Form, Input, Icon, Button, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as actions from \"../../actions/auth\";\r\nimport { getSchools } from \"../../actions/schools\";\r\nimport { getUsers } from \"../../actions/users\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass StudentRegister extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getSchools(this.props.token);\r\n      this.props.getUsers(this.props.token);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getSchools(newProps.token);\r\n        this.props.getUsers(newProps.token);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        let is_student = true;\r\n        let is_teacher = false;\r\n        let is_school_admin = false;\r\n        let is_system_admin = false;\r\n\r\n        this.props.onAuth(\r\n          values.first_name,\r\n          values.last_name,\r\n          values.username,\r\n          values.email,\r\n          values.password1,\r\n          values.password2,\r\n          values.school,\r\n          is_student,\r\n          is_teacher,\r\n          is_school_admin,\r\n          is_system_admin\r\n\r\n        );\r\n        // this.props.students.map((v, k) => {\r\n        //   if (v.username == values.username) {\r\n        //     this.props.history.push(`/student/${v.id}/update`);\r\n        //   }\r\n        // })\r\n        this.props.history.push(`/student/all-students`);\r\n      //  return <Redirect to=\"/student/all-students\" />\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue(\"password1\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"password2\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { is_system_admin, is_school_admin, is_teacher } = this.props.isRole;\r\n\r\n    let schools = this.props.schools.map((v, k) => {\r\n      return (\r\n        <Option key={v.id} value={v.id}>{v.name}</Option>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"col-md-6 m-auto\">\r\n        {is_system_admin || is_school_admin || is_teacher ?\r\n          (\r\n\r\n            <div className=\"card card-body mt-5\">\r\n              <h2>Student Registration</h2>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormItem>\r\n                  {getFieldDecorator(\"first_name\", {\r\n                    rules: [{ required: true, message: \"Please input your first name!\" }]\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  {getFieldDecorator(\"last_name\", {\r\n                    rules: [{ required: true, message: \"Please input your last name!\" }]\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                      placeholder=\"Last Name\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  {getFieldDecorator(\"username\", {\r\n                    rules: [{ required: true, message: \"Please input your username!\" }]\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                      placeholder=\"Username\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                      {\r\n                        type: \"email\",\r\n                        message: \"The input is not valid E-mail!\"\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input your E-mail!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                      placeholder=\"Email\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  {getFieldDecorator(\"password1\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input your password!\"\r\n                      },\r\n                      {\r\n                        validator: this.validateToNextPassword\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  {getFieldDecorator(\"password2\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Please confirm your password!\"\r\n                      },\r\n                      {\r\n                        validator: this.compareToFirstPassword\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      onBlur={this.handleConfirmBlur}\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  { getFieldDecorator(\"school\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Please select a user!\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Select placeholder=\"Select a school\">\r\n                        {schools}\r\n                      </Select>\r\n                      )\r\n                  }\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                  >\r\n                    Register Student\r\n                  </Button>\r\n                  {/* Or\r\n                  <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\r\n                    login\r\n                  </NavLink> */}\r\n                </FormItem>\r\n              </Form>\r\n            </div>\r\n          )\r\n            :\r\n            null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedStudentRegister = Form.create()(StudentRegister);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    isRole: state.auth,\r\n    schools: state.schools.schools,\r\n    students: state.users.users,\r\n    loading: state.auth.loading,\r\n    error: state.auth.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getSchools: token => dispatch(getSchools(token)),\r\n    getUsers: token => dispatch(getUsers(token)),\r\n    onAuth: (first_name, last_name, username, email, password1, password2, school, is_student, is_teacher, is_school_admin, is_system_admin) =>\r\n      dispatch(\r\n        actions.authRegister(first_name, last_name, username, email, password1, password2, school, is_student, is_teacher, is_school_admin, is_system_admin)\r\n      )\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedStudentRegister);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Grid, Skeleton, Card, Avatar, Modal, Button } from \"antd\";\r\nimport { EyeOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\nimport * as actions from \"../../actions/users\";\r\n// import StudentUpdate from './StudentUpdate';\r\nimport Hoc from \"../../hoc/hoc\";\r\n\r\nconst { Meta } = Card;\r\n\r\nclass StudentList extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getStudents(this.props.token);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getStudents(newProps.token);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.props.deleteStudent(this.props.token, id)\r\n  }\r\n\r\n\r\n  renderItem(item) {\r\n    return (\r\n      // <Link to={`/school/${item.id}`}>\r\n      <Hoc>\r\n        {item.is_student ? \r\n        // {(item.is_student && item.school == this.props.schoolId) ? \r\n          (\r\n\r\n            <List.Item\r\n              key={item.id}\r\n            >\r\n              <Card \r\n                hoverable\r\n                // title={item.name}\r\n                // style={{ width: 200 }}\r\n                // cover={\r\n                //   <img\r\n                //     alt=\"example\"\r\n                //     src={item.image}\r\n                //   />\r\n                // }\r\n                cover={\r\n                  item.students.map((v, k) => { \r\n                    if (v.image !== null) {\r\n                      return (\r\n                        <img\r\n                          style={{ height: 100 }}\r\n                          key={k}\r\n                          alt={item.username}\r\n                          src={v.image}\r\n                        />\r\n                      )\r\n                    }\r\n                    else {\r\n                    return (\r\n                        <img style={{ height: 100 }} key={k} src=\"/static/assets/img/ECOLOGO.jpg\" className=\"media-img-auto\" alt={item.username} />\r\n                      \r\n                      )\r\n                    }\r\n                    })\r\n                  }\r\n                actions={[\r\n                  // <SettingOutlined key=\"setting\" />,\r\n                  <Link to={`/student/${item.id}`}><EyeOutlined key=\"view\" /></Link>,\r\n                  <Link to={`/student/${item.id}/update/`}><EditOutlined key=\"edit\" /></Link>,\r\n                  <DeleteOutlined key=\"delete\" onClick={() => this.handleDelete(item.id)} />,\r\n                ]}\r\n              >\r\n                <Meta\r\n                  // avatar={<Avatar src=\"/static/assets/img/figure/student.png\" />}\r\n                  title={[item.first_name, \" \", item.last_name]}\r\n                  // description=\"This is the description\"\r\n                />\r\n              </Card>\r\n              \r\n            </List.Item>\r\n          )\r\n            :\r\n            null\r\n        }\r\n      </Hoc>\r\n      // </Link>\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Hoc>\r\n        {this.props.is_system_admin || this.props.is_school_admin || this.props.is_teacher ?\r\n            this.props.loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n              <div>\r\n                <h3 style={{ margin: \"16px 0\" }}>Student List</h3>\r\n                <List\r\n                  grid={{ \r\n                    gutter: 16,\r\n                    xs: 1,\r\n                    sm: 2,\r\n                    md: 2,\r\n                    lg: 4,\r\n                    xl: 4,\r\n                    xxl: 3, \r\n                    // column: 4,\r\n                  }}\r\n                  pagination={{\r\n                    onChange: page => {\r\n                      console.log(page);\r\n                    },\r\n                    pageSize: 6,\r\n                  }}\r\n                  bordered\r\n                  dataSource={this.props.students}\r\n                  renderItem={item => this.renderItem(item)}\r\n                  />\r\n              </div>\r\n            )\r\n           : null\r\n        }\r\n      </Hoc>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    is_school_admin: state.auth.is_school_admin,\r\n    is_teacher: state.auth.is_teacher,\r\n    schoolId: state.auth.schoolId,\r\n    students: state.users.users,\r\n    loading: state.users.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteStudent: (token, id) => dispatch(actions.deleteUser(token, id)),\r\n    getStudents: token => dispatch(actions.getUsers(token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StudentList);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Skeleton, Card, Modal, Button, Avatar } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { getUserDetail, deleteUser } from '../../actions/users';\r\n// import { getStudentDetail, deleteStudent } from '../../actions/students';\r\n// import StudentUpdate from './StudentUpdate';\r\n\r\n\r\nconst { confirm } = Modal\r\nconst { Meta } = Card;\r\n\r\nclass StudentDetails extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getStudentDetail(this.props.token, this.props.match.params.id );\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getStudentDetail(newProps.token, this.props.match.params.id );\r\n      } \r\n    }\r\n  }\r\n\r\n\r\n  showConfirmDelete = () => {\r\n    // e.preventDefault();\r\n    confirm({\r\n      title: 'Do you want to delete these school?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'When clicked the OK button, this dialog will be closed after 1 second',\r\n      onOk: () => {\r\n        this.props.deleteStudent(this.props.token, this.props.match.params.id);\r\n        this.props.history.push(\"/student/all-students\")\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentStudent } = this.props;\r\n    const { id, first_name, last_name, username, email, is_student, school, students } = currentStudent;\r\n    // const { id, first_name, last_name, username, email, students } = currentStudent;\r\n    let student = null;\r\n    try {\r\n      student = students.map((v, k) => {\r\n        return (\r\n          <div key={k}>\r\n            <p><strong>Street: </strong>{v.street}</p>\r\n          </div>\r\n        )\r\n      });  \r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {\r\n        // is_student == true && school == this.props.schoolId ? \r\n          this.props.is_system_admin || this.props.is_school_admin || this.props.is_teacher || (this.props.is_student && this.props.userId == this.props.match.params.id) ? \r\n          Object.keys(currentStudent).length > 0 ? (\r\n            <div className=\"m-auto mt-5\">\r\n              {this.props.loading ? (\r\n                <Skeleton active />\r\n              ) : (\r\n                  <Card\r\n                    // avatar={<Avatar src=\"/static/assets/img/figure/student.png\" />}\r\n                    // title={[first_name, \" \", last_name]}\r\n                    extra={\r\n                      <div>\r\n                        <Link to={`/student/${id}/update`}><Button type=\"primary\">\r\n                          Edit\r\n                        </Button></Link>\r\n                        <Button type=\"danger\"  onClick={this.showConfirmDelete}>\r\n                          Delete\r\n                        </Button>\r\n                      </div>\r\n                    }\r\n                    style={{ width: \"100%\" }}>\r\n                  <Meta\r\n                      avatar={<Avatar src=\"/static/assets/img/figure/student.png\" />}\r\n                      title={[first_name, \" \", last_name]}\r\n                    // title={[item.first_name, \" \", item.last_name]}\r\n                    // description=\"This is the description\"\r\n                    />\r\n                    <br />\r\n                  {/* <p><strong>First Name: </strong>{first_name}</p>\r\n                  <p><strong>Last Name: </strong>{last_name}</p> */}\r\n                  <p><strong>Username: </strong>{username}</p>\r\n                  <p><strong>Email: </strong>{email}</p>\r\n                  {student}\r\n                </Card>\r\n              )}\r\n            </div>\r\n          )\r\n            :\r\n            null\r\n            :\r\n            null\r\n            // :\r\n            // null\r\n        }\r\n    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    is_school_admin: state.auth.is_school_admin,\r\n    is_teacher: state.auth.is_teacher,\r\n    is_student: state.auth.is_student,\r\n    schoolId: state.auth.schoolId,\r\n    currentStudent: state.users.currentUser,\r\n    loading: state.users.loading,\r\n    username: state.auth.username\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteStudent: (token, id) => dispatch(deleteUser(token, id)),\r\n    getStudentDetail: (token, id) => dispatch(getUserDetail(token, id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StudentDetails);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// import { updateSchoolImage, getSchoolDetail } from '../../../actions/schools'\r\n// import reqwest from 'reqwest';\r\nimport axios from 'axios';\r\n\r\nclass StudentImageUpload extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\n  \r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    // fileList.forEach(file => {\r\n      formData.append('image', fileList[0], fileList[0].name);\r\n      // formData.append('logo', file, file.name);\r\n    // });\r\n\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n\r\n\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      // \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${this.props.token}`\r\n    };\r\n    axios\r\n      .put(`http://127.0.0.1:8000/students-image/${this.props.currentStudent.students[0].id}/`, formData)\r\n      .then(res => {\r\n        this.setState({\r\n          fileList: [],\r\n          uploading: false,\r\n        });\r\n        message.success('upload successfully.');\r\n        console.log(res)\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          uploading: false,\r\n        });\r\n        message.error('sorry error has occured.', err);\r\n        console.log(err)\r\n      });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      multiple: false,\r\n      showUploadList: {\r\n        showDownloadIcon: false\r\n      },\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          // const index = state.fileList.indexOf(file);\r\n          // const newFileList = state.fileList.slice();\r\n          // newFileList.splice(index, 1);\r\n          return {\r\n            fileList: [],\r\n            // fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [file],\r\n          // fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Upload {...props} accept=\".jpg,.png\" >\r\n          <Button>\r\n            <UploadOutlined /> Select File\r\n          </Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={this.handleUpload}\r\n          disabled={fileList.length === 0}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// const WrappedSchoolImageUpload = Form.create()(SchoolImageUpload);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    username: state.auth.username,\r\n    currentStudent: state.users.currentUser,\r\n    loading: state.users.loading,\r\n    error: state.users.error\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     updateSchoolImage: (token, id, school) => dispatch(updateSchoolImage(token, id, school)),\r\n//     getSchoolDetail: (token, id) => dispatch(getSchoolDetail(token, id)),\r\n//   };\r\n// };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  // mapDispatchToProps\r\n)(StudentImageUpload);\r\n// export default SchoolImageUpload","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Form, Row, Col, Input, Button, Icon, DatePicker, Select, Upload, Modal } from 'antd';\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\nimport { updateUser, getUserDetail } from \"../../actions/users\";\r\nimport StudentImageUpload from './forms/StudentImageUpload';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nclass StudentUpdate extends Component {\r\n\r\n  // state = {\r\n  //   previewVisible: false,\r\n  //   previewImage: '',\r\n  //   fileList: {},\r\n  // };\r\n  state = {\r\n    confirmDirty: false,\r\n    // image: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getStudentDetail(this.props.token, this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getStudentDetail(newProps.token, this.props.match.params.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        let is_student = true;\r\n        let is_teacher = false;\r\n        let is_school_admin = false;\r\n        let is_system_admin = false;\r\n        const students = [];\r\n        // for (let i = 0; i < values.questions.length; i += 1) {\r\n          students.push({\r\n            // image: values.image,\r\n            date_of_birth: values.date_of_birth,\r\n            gender: values.gender,\r\n            street: values.street,\r\n            city: values.city,\r\n            state: values.state,\r\n            country: values.country,\r\n            zip_code: values.zip_code,\r\n            father_name: values.father_name,\r\n            mother_name: values.mother_name,\r\n            father_occupation: values.father_occupation,\r\n            mother_occupation: values.mother_occupation,\r\n            father_phone: values.father_phone,\r\n            mother_phone: values.mother_phone,\r\n            father_email: values.father_email,\r\n            mother_email: values.mother_email,\r\n            emergency_contact1: values.emergency_contact1,\r\n            emergency_contact2: values.emergency_contact2,\r\n            blood_group: values.blood_group,\r\n            mother_tongue: values.mother_tongue,\r\n            father_annual_income: values.father_annual_income,\r\n            mother_annual_income: values.mother_annual_income,\r\n            previous_school_info: values.previous_school_info,\r\n            class_of_admission: values.class_of_admission,\r\n            year_of_admission: values.year_of_admission,\r\n          });\r\n        // }\r\n      \r\n        const user = {\r\n          first_name:     values.first_name,\r\n          last_name:      values.last_name,\r\n          username:       values.username,\r\n          email:          values.email,\r\n          // password1:      values.password1,\r\n          // password2:      values.password2,\r\n          is_student:     is_student,\r\n          is_teacher:     is_teacher,\r\n          is_school_admin: is_school_admin,\r\n          is_system_admin: is_system_admin,\r\n          students,\r\n          \r\n        }\r\n        this.props.updateStudent(this.props.token, this.props.match.params.id, user);\r\n      }\r\n    });\r\n  };\r\n\r\n  normFile = e => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  \r\n\r\n\r\n  // getBase64 = (file) => {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     const reader = new FileReader();\r\n  //     reader.readAsDataURL(file);\r\n  //     reader.onload = () => resolve(reader.result);\r\n  //     reader.onerror = error => reject(error);\r\n  //   });\r\n  // }\r\n  \r\n  // handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // handlePreview = file => {\r\n  //   if (!file.url && !file.preview) {\r\n  //     file.preview = getBase64(file.originFileObj);\r\n  //   }\r\n\r\n  //   this.setState({\r\n  //     previewImage: file.url || file.preview,\r\n  //     previewVisible: true,\r\n  //   });\r\n  // };\r\n\r\n  // handleChange = ({ fileList }) => this.setState({ fileList });\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { currentStudent } = this.props;\r\n    const { first_name, last_name, username, email, is_student, school, students } = currentStudent;\r\n\r\n\r\n    return (\r\n      <div>\r\n        {\r\n        // is_student == true && school == this.props.schoolId ?\r\n          this.props.is_system_admin || this.props.is_school_admin || this.props.is_teacher || (this.props.is_student && this.props.userId == this.props.match.params.id) ?\r\n            Object.keys(currentStudent).length > 0 ? \r\n              (\r\n                <div>\r\n                  <StudentImageUpload />\r\n                  <br />\r\n                  <Form onSubmit={this.handleSubmit} >\r\n                    {/* <Row>\r\n                      <Col span={4} >\r\n                        <Form.Item\r\n                          name=\"image\"\r\n                          label=\"Image\"\r\n                          // valuePropName=\"fileList\"\r\n                          // getValueFromEvent={this.normFile}\r\n                          // extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n                          // label={`Image`}\r\n                        >\r\n                          <Upload>\r\n                            <Button>\r\n                              <UploadOutlined /> Select Image\r\n                            </Button>\r\n                          </Upload>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row> */}\r\n                    <Row gutter={24}>\r\n                      <Col span={8} >\r\n                        <Form.Item label={`First Name`}>\r\n                          {getFieldDecorator(\"first_name\", {\r\n                            initialValue: first_name,\r\n                            rules: [{ required: true, message: \"Please input your first name!\" }]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"First Name\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={8} >\r\n                        <Form.Item label={`Last Name`}>\r\n                          {getFieldDecorator(\"last_name\", {\r\n                            initialValue: last_name,\r\n                            rules: [{required: true, message: \"Please input your last name!\" }]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"Last Name\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={8} >\r\n                        <Form.Item label={`Username`}>\r\n                          {getFieldDecorator(\"username\", {\r\n                            initialValue: username,\r\n                            rules: [{required: true, message: \"Please input your username!\" }]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"Username\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n\r\n                      <Col span={8} >\r\n                        <Form.Item label={`Email`}>\r\n                          {getFieldDecorator(\"email\", {\r\n                            initialValue: email,\r\n                            rules: [\r\n                              {\r\n                                type: \"email\",\r\n                                message: \"The input is not valid E-mail!\"\r\n                              },\r\n                              {\r\n                                required: true,\r\n                                message: \"Please input your E-mail!\"\r\n                              }\r\n                            ]\r\n                          })(\r\n                            <Input\r\n                              prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                              placeholder=\"Email\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n                    \r\n\r\n                    {students.map((v, k) => {\r\n                      return (\r\n                        <div key={k}>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Gender`}>\r\n                              {getFieldDecorator(`gender`, {\r\n                                initialValue: v.gender,\r\n                              })\r\n                                (\r\n                                <Select placeholder=\"Select your gender\">\r\n                                  <Option value=\"male\">Male</Option>\r\n                                  <Option value=\"female\">Female</Option>\r\n                                </Select>\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Date of Birth`}>\r\n                              {getFieldDecorator(`date_of_birth`, {\r\n                                defaultValue: moment(v.date_of_birth, 'YYYY-MM-DD'),\r\n                              })\r\n                                (\r\n                                  <DatePicker />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Country`}>\r\n                              {getFieldDecorator(`country`, {\r\n                                initialValue: v.country,\r\n                              })\r\n                                (\r\n                                <Select placeholder=\"Select your country\">\r\n                                  <Option value=\"usa\">USA</Option>\r\n                                  <Option value=\"nigeria\">Nigeria</Option>\r\n                                </Select>\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`State`}>\r\n                              {getFieldDecorator(`state`, {\r\n                                initialValue: v.state,\r\n                              })\r\n                                (\r\n                                <Select placeholder=\"Select your state\">\r\n                                  <Option value=\"washinton\">Washinton</Option>\r\n                                  <Option value=\"imo\">Imo</Option>\r\n                                </Select>\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`City`}>\r\n                              {getFieldDecorator(`city`, {\r\n                                initialValue: v.city,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"City\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Street`}>\r\n                              {getFieldDecorator(`street`, {\r\n                                initialValue: v.street,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"Street\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Zip Code`}>\r\n                              {getFieldDecorator(`zip_code`, {\r\n                                initialValue: v.zip_code,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"Zip code\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Father's Name`}>\r\n                              {getFieldDecorator(`father_name`, {\r\n                                initialValue: v.father_name,\r\n                              })\r\n                                (\r\n                                  <Input placeholder=\"Father's Name\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Mother's Name`}>\r\n                              {getFieldDecorator(`mother_name`, {\r\n                                initialValue: v.mother_name,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Mother's Name\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Father's Occupation`}>\r\n                              {getFieldDecorator(`father_occupation`, {\r\n                                initialValue: v.father_occupation,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Father's Occupation\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Mother's Occupation`}>\r\n                              {getFieldDecorator(`mother_occupation`, {\r\n                                initialValue: v.mother_occupation,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Mother's Occupation\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Father's Phone`}>\r\n                              {getFieldDecorator(`father_phone`, {\r\n                                initialValue: v.father_phone,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Father's Phone\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Mother's Phone`}>\r\n                              {getFieldDecorator(`mother_phone`, {\r\n                                initialValue: v.mother_phone,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Mother's Phone\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Father's Email`}>\r\n                              {getFieldDecorator(`father_email`, {\r\n                                initialValue: v.father_email,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Father's Email\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Mother's Email`}>\r\n                              {getFieldDecorator(`mother_email`, {\r\n                                initialValue: v.mother_email,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Mother's Email\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Emergency Contact1`}>\r\n                              {getFieldDecorator(`emergency_contact1`, {\r\n                                initialValue: v.emergency_contact1,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Emergency Contact1\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Emergency Contact2`}>\r\n                              {getFieldDecorator(`emergency_contact2`, {\r\n                                initialValue: v.emergency_contact2,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Emergency Contact2\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Blood Group`}>\r\n                              {getFieldDecorator(`blood_group`, {\r\n                                initialValue: v.blood_group,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Blood Group\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Mother Tongue`}>\r\n                              {getFieldDecorator(`mother_tongue`, {\r\n                                initialValue: v.mother_tongue,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Mother Tongue\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Father Annual Income`}>\r\n                              {getFieldDecorator(`father_annual_income`, {\r\n                                initialValue: v.father_annual_income,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Father Annual Income\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Mother Annual Income`}>\r\n                              {getFieldDecorator(`mother_annual_income`, {\r\n                                initialValue: v.mother_annual_income,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Mother Annual Income\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Previous School Info`}>\r\n                              {getFieldDecorator(`previous_school_info`, {\r\n                                initialValue: v.previous_school_info,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Previous School Info\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Class of Admission`}>\r\n                              {getFieldDecorator(`class_of_admission`, {\r\n                                initialValue: v.class_of_admission,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Class of Admission\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col span={8} >\r\n                            <Form.Item label={`Year of admission`}>\r\n                              {getFieldDecorator(`year_of_admission`, {\r\n                                initialValue: v.year_of_admission,\r\n                              })\r\n                                (\r\n                                <Input placeholder=\"Year of admission\" />\r\n                              )}\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                    </Row>\r\n                    <Row>\r\n                      <Col span={24} style={{ textAlign: 'right' }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                          Save\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n              )\r\n              :\r\n              null\r\n            :\r\n            null\r\n          // :\r\n          // null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst WrappedStudentUpdate = Form.create()(StudentUpdate)\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    schoolId: state.auth.schoolId,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    is_school_admin: state.auth.is_school_admin,\r\n    is_teacher: state.auth.is_teacher,\r\n    is_student: state.auth.is_student,\r\n    username: state.auth.username,\r\n    currentStudent: state.users.currentUser,\r\n    loading: state.users.loading,\r\n    error: state.users.error\r\n  };\r\n};\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     teacherForm: (token, user, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group) =>\r\n//       dispatch(teacherForm(token, user, image, date_of_birth, gender, street, city, state, country, zip_code, years_of_experience, academic_qualification, phone, emergency_contact1, emergency_contact2, blood_group))\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateStudent: (token, id, student) => dispatch(updateUser(token, id, student)),\r\n    getStudentDetail: (token, id) => dispatch(getUserDetail(token, id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedStudentUpdate)\r\n\r\n// export default TeacherUpdate","import React from \"react\";\r\nimport { Form, Input, Icon, Button, Select, InputNumber, Upload, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { createSchool } from \"../../actions/schools\";\r\nimport ImageUpload from \"./forms/ImageUpload\";\r\n\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass SchoolCreate extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    image: null\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        // const { imageData } = this.props;\r\n        // const formData = new FormData();\r\n        // fileList.forEach(file => {\r\n        //   formData.append('files[]', file);\r\n        // });\r\n        // console.log('Upload event2:', values.logo);\r\n        // if (Array.isArray(values.logo)) {\r\n        //   return e;\r\n        // }\r\n        // return e && e.fileList;\r\n        const school = {\r\n          // user: this.props.username,\r\n          name: values.name,\r\n          street: values.street,\r\n          city: values.city,\r\n          state: values.state,\r\n          country: values.country,\r\n          zipcode: values.zipcode,\r\n          owner_name: values.owner_name,\r\n          phone: values.phone,\r\n          fax: values.fax,\r\n          email: values.email,\r\n          website: values.website,\r\n        }\r\n        \r\n        this.props.createSchool(\r\n          this.props.token,\r\n          school\r\n        );\r\n        this.props.history.push(\"/school/all-schools\")\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  // normFile = e => {\r\n  //   console.log('Upload event:', e);\r\n  //   if (Array.isArray(e)) {\r\n  //     return e;\r\n  //   }\r\n  //   return e && e.file;\r\n  // };\r\n\r\n  // handleImageChange = (e) => {\r\n  //   this.setState({\r\n  //     image: e.target.files[0]\r\n  //   })\r\n  // };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div>\r\n        {this.props.is_system_admin ? (\r\n            <div>\r\n              <Form onSubmit={this.handleSubmit}>\r\n                <FormItem label={`School Name`}>\r\n                  {getFieldDecorator(\"name\", {\r\n                    rules: [{ required: true, message: \"School name is required!\" }]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"School Name\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`Country`}>\r\n                  {getFieldDecorator(\"country\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Please select school country!\"\r\n                      },\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Select school country\">\r\n                      <Option value=\"usa\">USA</Option>\r\n                      <Option value=\"nigeria\">Nigeria</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`State`}>\r\n                  {getFieldDecorator(\"state\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Please select school state!\"\r\n                      },\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Select school state\">\r\n                      <Option value=\"newyork\">New York</Option>\r\n                      <Option value=\"imo\">Imo</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`City`}>\r\n                  {getFieldDecorator(\"city\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Please select school city!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Select a school city\">\r\n                      <Option value=\"owerri\">owerri</Option>\r\n                      <Option value=\"awka\">awka</Option>\r\n                    </Select>\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`Street`}>\r\n                  {getFieldDecorator(\"street\", {\r\n                    rules: [{ required: true, message: \"Please enter school street!\" }]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"School Street\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n\r\n                <FormItem label={`Zip Code`}>\r\n                  {getFieldDecorator(\"zipcode\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"zipcode is required!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber placeholder=\"Zipcode\" />\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`Owner Name`}>\r\n                  {getFieldDecorator(\"owner_name\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Owner name is required!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"Owner Name\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`Mobile Number`}>\r\n                  {getFieldDecorator(\"phone\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"phone number is required!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber placeholder=\"Mobile number\" />\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`Fax`}>\r\n                  {getFieldDecorator(\"fax\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"fax is required!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"Fax\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`Email`}>\r\n                  {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                      {\r\n                        type: \"email\",\r\n                        message: \"The input is not valid E-mail!\"\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: \"Please input your E-mail!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"Email\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n                <FormItem label={`Website`}>\r\n                  {getFieldDecorator(\"website\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"School website is required!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      placeholder=\"Website\"\r\n                    />\r\n                  )}\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginRight: \"10px\" }}\r\n                  >\r\n                    Create School\r\n                  </Button>\r\n                  {/* Or\r\n                  <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\r\n                    login\r\n                  </NavLink> */}\r\n                </FormItem>\r\n              </Form>\r\n            </div>\r\n          ): null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedSchoolCreate = Form.create()(SchoolCreate);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    username: state.auth.username,\r\n    loading: state.schools.loading,\r\n    error: state.schools.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createSchool: (token, school) => dispatch(createSchool(token, school))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedSchoolCreate);\r\n","import React from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// import reqwest from 'reqwest';\r\nimport axios from 'axios';\r\n\r\nclass ImageUpload extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append('files[]', file);\r\n    });\r\n\r\n    // this.props.imageData = formData\r\n\r\n    // this.setState({\r\n    //   uploading: true,\r\n    // });\r\n\r\n    // You can use any AJAX library you like\r\n    // reqwest({\r\n    //   url: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    //   method: 'post',\r\n    //   processData: false,\r\n    //   data: formData,\r\n    //   success: () => {\r\n    //     this.setState({\r\n    //       fileList: [],\r\n    //       uploading: false,\r\n    //     });\r\n    //     message.success('upload successfully.');\r\n    //   },\r\n    //   error: () => {\r\n    //     this.setState({\r\n    //       uploading: false,\r\n    //     });\r\n    //     message.error('upload failed.');\r\n    //   },\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          const index = state.fileList.indexOf(file);\r\n          const newFileList = state.fileList.slice();\r\n          newFileList.splice(index, 1);\r\n          return {\r\n            fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Upload {...props}>\r\n          <Button>\r\n            <UploadOutlined /> Select File\r\n          </Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={this.handleUpload}\r\n          disabled={fileList.length === 0}\r\n          // loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageUpload","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n// import { updateSchoolImage, getSchoolDetail } from '../../../actions/schools'\r\n// import reqwest from 'reqwest';\r\nimport axios from 'axios';\r\n\r\nclass SchoolImageUpload extends React.Component {\r\n  state = {\r\n    fileList: [],\r\n    uploading: false,\r\n  };\r\n\r\n  \r\n  handleUpload = () => {\r\n    const { fileList } = this.state;\r\n    const formData = new FormData();\r\n    // fileList.forEach(file => {\r\n      formData.append('logo', fileList[0], fileList[0].name);\r\n      // formData.append('logo', file, file.name);\r\n    // });\r\n\r\n    this.setState({\r\n      uploading: true,\r\n    });\r\n\r\n\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      // \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${this.props.token}`\r\n    };\r\n    axios\r\n      .put(`http://127.0.0.1:8000/schoologo/${this.props.currentSchool.id}/`, formData)\r\n      .then(res => {\r\n        this.setState({\r\n          fileList: [],\r\n          uploading: false,\r\n        });\r\n        message.success('upload successfully.');\r\n        console.log(res)\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          uploading: false,\r\n        });\r\n        message.error('sorry error has occured.', err);\r\n        console.log(err)\r\n      });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { uploading, fileList } = this.state;\r\n    const props = {\r\n      multiple: false,\r\n      showUploadList: {\r\n        showDownloadIcon: false\r\n      },\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          // const index = state.fileList.indexOf(file);\r\n          // const newFileList = state.fileList.slice();\r\n          // newFileList.splice(index, 1);\r\n          return {\r\n            fileList: [],\r\n            // fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [file],\r\n          // fileList: [...state.fileList, file],\r\n        }));\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Upload {...props} accept=\".jpg,.png\" >\r\n          <Button>\r\n            <UploadOutlined /> Select File\r\n          </Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={this.handleUpload}\r\n          disabled={fileList.length === 0}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? 'Uploading' : 'Start Upload'}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// const WrappedSchoolImageUpload = Form.create()(SchoolImageUpload);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    username: state.auth.username,\r\n    currentSchool: state.schools.currentSchool,\r\n    loading: state.schools.loading,\r\n    error: state.schools.error\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     updateSchoolImage: (token, id, school) => dispatch(updateSchoolImage(token, id, school)),\r\n//     getSchoolDetail: (token, id) => dispatch(getSchoolDetail(token, id)),\r\n//   };\r\n// };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  // mapDispatchToProps\r\n)(SchoolImageUpload);\r\n// export default SchoolImageUpload","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form, Input, Icon, Button, Select, InputNumber, Upload } from \"antd\";\r\nimport { PlusOutlined, UploadOutlined } from '@ant-design/icons';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { createSchool, getSchoolDetail, updateSchool } from \"../../actions/schools\";\r\nimport ImageUpload from \"./forms/ImageUpload\";\r\n\r\nimport SchoolImageUpload from \"./forms/SchoolImageUpload\";\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass SchoolUpdate extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    image: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getSchoolDetail(this.props.token, this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getSchoolDetail(newProps.token, this.props.match.params.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        // const { imageData } = this.props;\r\n        // const formData = new FormData();\r\n        // fileList.forEach(file => {\r\n        //   formData.append('files[]', file);\r\n        // });\r\n        // console.log('Upload event2:', values.logo);\r\n        // if (Array.isArray(values.logo)) {\r\n        //   return e;\r\n        // }\r\n        // return e && e.fileList;\r\n        const school = {\r\n          // user: this.props.username,\r\n          name: values.name,\r\n          // logo: values.logo,\r\n          street: values.street,\r\n          city: values.city,\r\n          state: values.state,\r\n          country: values.country,\r\n          zipcode: values.zipcode,\r\n          owner_name: values.owner_name,\r\n          phone: values.phone,\r\n          fax: values.fax,\r\n          email: values.email,\r\n          website: values.website,\r\n        }\r\n        \r\n        this.props.updateSchool(\r\n          this.props.token,\r\n          this.props.match.params.id,\r\n          school\r\n        );\r\n        // this.props.history.push(\"/school-update/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { currentSchool } = this.props;\r\n    const { name, street, city, state, country, zipcode, owner_name, phone, fax, email, website } = currentSchool;\r\n    return (\r\n      <div>\r\n        { this.props.is_system_admin && Object.keys(currentSchool).length > 0 ? (\r\n          <div>\r\n            <SchoolImageUpload />\r\n            <br />\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <FormItem>\r\n                {getFieldDecorator(\"name\", {\r\n                  initialValue: name,\r\n                  rules: [{ required: true, message: \"School name is required!\" }]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"School Name\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n           \r\n              <FormItem>\r\n                {getFieldDecorator(\"country\", {\r\n                  initialValue: country,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select school country!\"\r\n                    },\r\n                  ]\r\n                })(\r\n                  <Select placeholder=\"Select school country\">\r\n                    <Option value=\"usa\">USA</Option>\r\n                    <Option value=\"nigeria\">Nigeria</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"state\", {\r\n                  initialValue: state,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select school state!\"\r\n                    },\r\n                  ]\r\n                })(\r\n                  <Select placeholder=\"Select school state\">\r\n                    <Option value=\"newyork\">New York</Option>\r\n                    <Option value=\"imo\">Imo</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"city\", {\r\n                  initialValue: city,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please select school city!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select placeholder=\"Select a user type\">\r\n                    <Option value=\"owerri\">owerri</Option>\r\n                    <Option value=\"awka\">awka</Option>\r\n                  </Select>\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"street\", {\r\n                  initialValue: street,\r\n                  rules: [{ required: true, message: \"Please enter school street!\" }]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"School Street\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n\r\n\r\n              <FormItem>\r\n                {getFieldDecorator(\"zipcode\", {\r\n                  initialValue: zipcode,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"zipcode is required!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber placeholder=\"Zipcode\" />\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"owner_name\", {\r\n                  initialValue: owner_name,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Owner name is required!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"Owner Name\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"phone\", {\r\n                  initialValue: phone,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"phone number is required!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <InputNumber placeholder=\"Mobile number\" />\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"fax\", {\r\n                  initialValue: fax,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"fax is required!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"Fax\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"email\", {\r\n                  initialValue: email,\r\n                  rules: [\r\n                    {\r\n                      type: \"email\",\r\n                      message: \"The input is not valid E-mail!\"\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your E-mail!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"Email\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator(\"website\", {\r\n                  initialValue: website,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"School website is required!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    placeholder=\"Website\"\r\n                  />\r\n                )}\r\n              </FormItem>\r\n\r\n              <FormItem>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                >\r\n                  Update School\r\n              </Button>\r\n                {/* Or\r\n              <NavLink style={{ marginRight: \"10px\" }} to=\"/login/\">\r\n                login\r\n              </NavLink> */}\r\n              </FormItem>\r\n            </Form>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedSchoolUpdate = Form.create()(SchoolUpdate);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    username: state.auth.username,\r\n    currentSchool: state.schools.currentSchool,\r\n    loading: state.schools.loading,\r\n    error: state.schools.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateSchool: (token, id, school) => dispatch(updateSchool(token, id, school)),\r\n    getSchoolDetail: (token, id) => dispatch(getSchoolDetail(token, id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedSchoolUpdate);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Grid, Skeleton, Card, Avatar, Modal, Button } from \"antd\";\r\nimport { MessageOutlined, LikeOutlined, StarOutlined, EyeOutlined, DeleteOutlined, EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nimport * as actions from \"../../actions/schools\";\r\nimport SchoolUpdate from './SchoolUpdate';\r\nimport Hoc from \"../../hoc/hoc\";\r\n\r\nconst { Meta } = Card;\r\n\r\nclass SchoolList extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getSchools(this.props.token);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getSchools(newProps.token);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.props.deleteSchool(this.props.token, id)\r\n  }\r\n\r\n\r\n  renderItem(item) {\r\n    return (\r\n      // <Link to={`/school/${item.id}`}>\r\n        <List.Item\r\n          key={item.id}\r\n        >\r\n          <Card \r\n            hoverable\r\n            // title={item.name}\r\n            // style={{ width: \"100%\" }}\r\n          cover={\r\n            item.logo !== null ? \r\n              (\r\n                <img\r\n                style={{ height: 100 }}\r\n                alt=\"Logo\"\r\n                src={item.logo}\r\n                />\r\n              )\r\n                :\r\n              (\r\n                <img style={{ height: 100 }} src=\"/static/assets/img/ECOLOGO.jpg\" className=\"media-img-auto\" alt=\"Logo\" />\r\n                \r\n              )\r\n            }\r\n            actions={[\r\n              // <SettingOutlined key=\"setting\" />,\r\n              <Link to={`/school/${item.id}`}><EyeOutlined key=\"view\" /></Link>,\r\n              <Link to={`/school/${item.id}/update/`}><EditOutlined key=\"edit\" /></Link>,\r\n              <DeleteOutlined key=\"delete\" onClick={() => this.handleDelete(item.id)} />,\r\n            ]}\r\n          >\r\n            <Meta\r\n              // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n              title={item.name}\r\n              // description=\"This is the description\"\r\n            />\r\n          </Card>\r\n          \r\n        </List.Item>\r\n      // </Link>\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Hoc>\r\n        {this.props.is_system_admin ?\r\n            this.props.loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n              <div>\r\n                <h3 style={{ margin: \"16px 0\" }}>School List</h3>\r\n                <List\r\n                  grid={{ \r\n                    gutter: 16,\r\n                    xs: 1,\r\n                    sm: 2,\r\n                    md: 2,\r\n                    lg: 4,\r\n                    xl: 4,\r\n                    xxl: 3, \r\n                    // column: 4,\r\n                  }}\r\n                  pagination={{\r\n                    onChange: page => {\r\n                      console.log(page);\r\n                    },\r\n                    pageSize: 6,\r\n                  }}\r\n                  bordered\r\n                  dataSource={this.props.schools}\r\n                  renderItem={item => this.renderItem(item)}\r\n                  />\r\n              </div>\r\n            )\r\n           : null\r\n        }\r\n      </Hoc>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    schools: state.schools.schools,\r\n    loading: state.schools.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteSchool: (token, id) => dispatch(actions.deleteSchool(token, id)),\r\n    getSchools: token => dispatch(actions.getSchools(token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SchoolList);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Skeleton, Card, Modal, Input, Button, Table } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport { ExclamationCircleOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { getSchoolDetail, deleteSchool } from '../../actions/schools';\r\nimport { getUsers } from '../../actions/users';\r\nimport SchoolUpdate from './SchoolUpdate';\r\n\r\n\r\nconst { confirm } = Modal;\r\n\r\n// const data = [\r\n//   {\r\n//     key: '1',\r\n//     name: 'John Brown',\r\n//     age: 32,\r\n//     address: 'New York No. 1 Lake Park',\r\n//   },\r\n//   {\r\n//     key: '2',\r\n//     name: 'Joe Black',\r\n//     age: 42,\r\n//     address: 'London No. 1 Lake Park',\r\n//   },\r\n//   {\r\n//     key: '3',\r\n//     name: 'Jim Green',\r\n//     age: 32,\r\n//     address: 'Sidney No. 1 Lake Park',\r\n//   },\r\n//   {\r\n//     key: '4',\r\n//     name: 'Jim Red',\r\n//     age: 32,\r\n//     address: 'London No. 2 Lake Park',\r\n//   },\r\n// ];\r\n\r\nclass SchoolDetails extends Component {\r\n  state = {\r\n    searchText: 'test',\r\n    searchedColumn: 'test',\r\n  };\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    if (this.props.token !== undefined && this.props.token !== null) {\r\n      this.props.getSchoolDetail(this.props.token, this.props.match.params.id);\r\n      this.props.getTeachers(this.props.token);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.token !== this.props.token) {\r\n      if (newProps.token !== undefined && newProps.token !== null) {\r\n        this.props.getSchoolDetail(newProps.token, this.props.match.params.id);\r\n        this.props.getTeachers(newProps.token);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          icon={<SearchOutlined />}\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select());\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <div />\r\n        // <Highlighter\r\n        //   highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n        //   searchWords={[this.state.searchText]}\r\n        //   autoEscape\r\n        //   textToHighlight={text.toString()}\r\n        // />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  \r\n  \r\n  onChange = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n  }\r\n\r\n\r\n  showConfirmDelete = e => {\r\n    e.preventDefault();\r\n    const { deleteSchool } = this.props;\r\n    confirm({\r\n      title: 'Do you want to delete these school?',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: 'When clicked the OK button, this dialog will be closed after 1 second',\r\n      onOk: () => {\r\n        this.props.deleteSchool(this.props.token, this.props.match.params.id);\r\n        this.props.history.push(\"/school/all-schools\")\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentSchool } = this.props;\r\n    const { id, name, street, city, state, country, zipcode, owner_name, phone, fax, email, website } = currentSchool;\r\n\r\n    const data = []\r\n    // const columns = [\r\n    //   {\r\n    //     title: 'Name',\r\n    //     dataIndex: 'name',\r\n    //     key: 'name',\r\n    //     width: '30%',\r\n    //     ...this.getColumnSearchProps('name'),\r\n    //   },\r\n    //   {\r\n    //     title: 'Gender',\r\n    //     dataIndex: 'age',\r\n    //     key: 'age',\r\n    //     width: '20%',\r\n    //     ...this.getColumnSearchProps('age'),\r\n    //   },\r\n    //   {\r\n    //     title: 'Address',\r\n    //     dataIndex: 'address',\r\n    //     key: 'address',\r\n    //     ...this.getColumnSearchProps('address'),\r\n    //   },\r\n    // ];\r\n\r\n  const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '30%',\r\n        ...this.getColumnSearchProps('name'),\r\n      },\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('gender'),\r\n        // defaultSortOrder: 'descend',\r\n        // sorter: (a, b) => a.gender - b.gender,\r\n      },\r\n      {\r\n        title: 'Address',\r\n        dataIndex: 'address',  \r\n        key: 'address',\r\n        ...this.getColumnSearchProps('address'),\r\n        // filters: [\r\n        //   {\r\n        //     text: 'London',\r\n        //     value: 'London',\r\n        //   },\r\n        //   {\r\n        //     text: 'New York',\r\n        //     value: 'New York',\r\n        //   },\r\n        // ],\r\n        // filterMultiple: false,\r\n        // onFilter: (value, record) => record.address.indexOf(value) === 0,\r\n        // sorter: (a, b) => a.address.length - b.address.length,\r\n        // sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        title: 'Role',\r\n        dataIndex: 'role',\r\n        // key: 'name',\r\n        // width: '30%',\r\n        // ...this.getColumnSearchProps('name'),\r\n        filters: [\r\n          {\r\n            text: 'School Admins',\r\n            value: 'School Admin',\r\n          },\r\n          {\r\n            text: 'Teachers',\r\n            value: 'Teacher',\r\n          },\r\n          {\r\n            text: 'Students',\r\n            value: 'Student',\r\n          },\r\n          // {\r\n          //   text: 'Submenu',\r\n          //   value: 'Submenu',\r\n          //   children: [\r\n          //     {\r\n          //       text: 'Green',\r\n          //       value: 'Green',\r\n          //     },\r\n          //     {\r\n          //       text: 'Black',\r\n          //       value: 'Black',\r\n          //     },\r\n          //   ],\r\n          // },\r\n        ],\r\n        // specify the condition of filtering result\r\n        // here is that finding the name started with `value`\r\n        filterMultiple: false,\r\n        onFilter: (value, record) => record.role.indexOf(value) === 0,\r\n        sorter: (a, b) => a.role.length - b.role.length,\r\n        sortDirections: ['descend'],\r\n      },\r\n    ];\r\n\r\n    this.props.users.map((v, k) => {\r\n      let role = null\r\n        if (v.is_school_admin === true) {\r\n          role = \"School Admin\"\r\n        } else if (v.is_teacher === true) {\r\n          role = \"Teacher\"\r\n      }\r\n\r\n      let name = v.first_name + \" \" + v.last_name\r\n      \r\n      v.teachers.map((t, i) => {\r\n\r\n        data.push(\r\n          {\r\n            key: v.id,\r\n            name: name,\r\n            gender: t.gender ? t.gender : \"No Data\",\r\n            address: t.country ? t.country : \"No Data\",\r\n            role: role,\r\n          },\r\n        );\r\n      })\r\n\r\n      v.students.map((s, i) => {\r\n\r\n        data.push(\r\n          {\r\n            key: v.id,\r\n            name: name,\r\n            gender: s.gender ? s.gender : \"No Data\",\r\n            address: s.country ? s.country : \"No Data\",\r\n            role: \"Student\",\r\n          },\r\n        );\r\n      })\r\n    })\r\n    \r\n    return (\r\n      <div>\r\n        {this.props.is_system_admin && Object.keys(currentSchool).length > 0 ? (\r\n          <div className=\"m-auto mt-5\">\r\n            {this.props.loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n                <Card\r\n                  title={name}\r\n                  extra={\r\n                    <div>\r\n                      <Link to={`/school/${id}/update`}><Button type=\"primary\">\r\n                        Edit\r\n                      </Button></Link>\r\n                      <Button type=\"danger\"  onClick={this.showConfirmDelete}>\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  }\r\n                  style={{ width: \"100%\" }}>\r\n                <p><strong>Street: </strong>{street}</p>\r\n                <p><strong>City: </strong>{city}</p>\r\n                <p><strong>State: </strong>{state}</p>\r\n                <p><strong>Country: </strong>{country}</p>\r\n                <p><strong>Zip Code: </strong>{zipcode}</p>\r\n                <p><strong>Owner Name: </strong>{owner_name}</p>\r\n                <p><strong>Phone: </strong>{phone}</p>\r\n                <p><strong>Fax: </strong>{fax}</p>\r\n                <p><strong>Email: </strong>{email}</p>\r\n                <p><strong>Website: </strong>{website}</p>\r\n                <br />\r\n                <p><strong><h2>School Teachers & Students</h2></strong></p>\r\n                  \r\n                  <Table columns={columns} dataSource={data} onChange={this.onChange} />\r\n              </Card>\r\n              \r\n            )}\r\n          </div>\r\n        ) : null}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    is_system_admin: state.auth.is_system_admin,\r\n    currentSchool: state.schools.currentSchool,\r\n    users: state.users.users,\r\n    students: state.users.users,\r\n    loading: state.schools.loading,\r\n    username: state.auth.username\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteSchool: (token, id) => dispatch(deleteSchool(token, id)),\r\n    getSchoolDetail: (token, id) => dispatch(getSchoolDetail(token, id)),\r\n    getTeachers: (token) => dispatch(getUsers(token)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SchoolDetails);\r\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Hoc from \"./hoc/hoc\";\n\n\nimport Login from \"./components/accounts/Login\";\n\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nimport TeacherRegister from \"./components/dashboard/TeacherRegister\";\nimport TeacherList from \"./components/dashboard/TeacherList\";\nimport TeacherDetails from \"./components/dashboard/TeacherDetails\";\nimport TeacherUpdate from \"./components/dashboard/TeacherUpdate\";\n\nimport StudentRegister from \"./components/dashboard/StudentRegister\";\nimport StudentList from \"./components/dashboard/StudentList\";\nimport StudentDetails from \"./components/dashboard/StudentDetails\";\nimport StudentUpdate from \"./components/dashboard/StudentUpdate\";\n\nimport SchoolCreate from \"./components/dashboard/SchoolCreate\";\nimport SchoolList from \"./components/dashboard/SchoolList\";\nimport SchoolDetails from \"./components/dashboard/SchoolDetails\";\nimport SchoolUpdate from \"./components/dashboard/SchoolUpdate\";\n\nconst BaseRouter = () => (\n  \n  <div>\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={Dashboard} />\n        {/* <Route exact path=\"/\" component={Dashboard} /> */}\n        <Route exact path=\"/school/register-school\" component={SchoolCreate} />\n        <Route exact path=\"/school/all-schools\" component={SchoolList} />\n        <Route exact path=\"/school/:id/update\" component={SchoolUpdate} />\n        <Route exact path=\"/school/:id\" component={SchoolDetails} />\n      \n        <Route exact path=\"/teacher/register-teacher\" component={TeacherRegister} />\n        <Route exact path=\"/teacher/all-teachers\" component={TeacherList} />\n        <Route exact path=\"/teacher/:id/update\" component={TeacherUpdate} />\n        <Route exact path=\"/teacher/:id\" component={TeacherDetails} />\n        \n        <Route exact path=\"/student/register-student\" component={StudentRegister} />\n        <Route exact path=\"/student/all-students\" component={StudentList} />\n        <Route exact path=\"/student/:id/update\" component={StudentUpdate} />\n        <Route exact path=\"/student/:id\" component={StudentDetails} />\n        \n        <Route exact path=\"/login\" component={Login} />\n      </Switch>\n  </div>\n);\n\nexport default BaseRouter;\n","import React, { Component, Fragment } from \"react\";\r\n// import './static/assets/js/modernizr-3.6.0.min.js';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import 'antd/dist/antd.css';\r\nimport \"./App.css\";\r\nimport {\r\n  // BrowserRouter as Router,\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\n\r\nimport Home from './components/Home';\r\nimport Alerts from \"./components/layout/Alerts\";\r\n\r\nimport * as actions from \"./actions/auth\";\r\n\r\nimport BaseRouter from \"./routes\"\r\n\r\n\r\n// Alert Options\r\nconst alertOptions = {\r\n  timeout: 3000,\r\n  position: \"top center\"\r\n};\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    // store.dispatch(loadUser());\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Home>\r\n          <BaseRouter />\r\n        </Home>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\r\n    logout: () => dispatch(actions.logout())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n// export default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import registerServiceWorker from \"./registerServiceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('app'));\r\n// registerServiceWorker();\r\nserviceWorker.unregister();"],"sourceRoot":""}